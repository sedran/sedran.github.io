<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Serdar Kuzucu</title>
    <description>Serdar Kuzucu'nun kişisel blogu. Java, Javascript, Programlama ve birçok teknik konu üzerine kafa patlatmaca.
</description>
    <link>https://serdarkuzucu.com/</link>
    <atom:link href="https://serdarkuzucu.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 14 Jan 2021 19:08:24 +0000</pubDate>
    <lastBuildDate>Thu, 14 Jan 2021 19:08:24 +0000</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Gradle: Spring Boot &amp; Angular Uygulamalarını Birlikte Build Edelim</title>
        <description>&lt;p&gt;Yeni bir projeye başlamanın en sıkıcı maddelerinden birisi de projeyi oluşturup 
her projede kullandığımız basmakalıp (boilerplate) kodları yazmaktır.
Build aracını (maven, gradle, vs) seçmek, bağımlılıkları build aracına eklemek,
kullanılan frameworklerin (spring, angular, vs) konfigürasyonlarının yapılması gibi
her projede tekrar tekrar yaptığımız işler vardır 
ve bir kişi o işi yapıp projeyi repository’ye atmazsa 
ekibin geri kalanı projede yazılım geliştirmeye başlayamaz.
Genellikle bu işlem varolan bir projeyi kopyalayıp içinde yeni projeye lazım olmayan
ne var ne yok silmek şeklinde yapılsa da 
bazen yeni bir proje yapısını gerektiren durumlar oluşabilir.
2018 yılında backend için Spring Boot ve frontend için Angular framework’lerini
kullanmaya karar verdiğimizde ekip için bu yeni bir proje yapısıydı 
ve biraz araştırıp bu iki arkadaşı bir arada kullanmanın proje için 
en uygun yolunu bulmam gerekmişti. 
O günden beri ekip olarak birçok projede kullandığımız bu proje yapısını 
sıfırdan bir proje oluşturarak anlatmaya çalışacağım.&lt;/p&gt;

&lt;!--more--&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;
Tüm yazıyı okumak istemeyen arkadaşlar doğrudan şu linke tıklayarak 
bu yazıyı yazarken geliştirdiğim örnek uygulamayı Github hesabımda inceleyebilirsiniz:
&lt;a href=&quot;https://github.com/sedran/spring-boot-angular-gradle-example&quot;&gt;sedran/spring-boot-angular-gradle-example&lt;/a&gt; 
&lt;/div&gt;

&lt;p&gt;Aşağıda adım adım projeyi sıfırdan nasıl oluşturduğumu anlatıyor olacağım.
Ben bu projeyi oluştururken IDE olarak Intellij IDEA kullanıyorum.
Başka bir IDE kullanarak denemek istiyorsanız anlatacaklarımın o IDE’deki
karşılıklarını bilmeniz veya bir şekilde bulmanız gerekecektir.&lt;/p&gt;

&lt;p&gt;Ek olarak projeyi build edebilmek ve bazı adımları tamamlayabilmek için
bilgisayarınızda “npm” ve “ng” (Angular CLI) araçlarının da yüklü olması gerekmektedir.&lt;/p&gt;

&lt;h2 id=&quot;adım-1-gradle-projesi-oluşturalım&quot;&gt;Adım 1: Gradle Projesi Oluşturalım&lt;/h2&gt;

&lt;p&gt;Öncelikle Intellij IDEA menüsünden &lt;code class=&quot;highlighter-rouge&quot;&gt;File &amp;gt; New &amp;gt; Project&lt;/code&gt; 
yolunu takip ederek yeni proje oluşturma diyaloğunu açıyoruz 
ve bu diyalogda sol tarafta “Gradle” seçeneğini işaretliyoruz.
Sağ tarafta ise hiçbir seçeneği işaretlemeden Next butonuna basıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/01-new-gradle-project.png&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;0&quot; height=&quot;600&quot; src=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/01-new-gradle-project.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sonraki adımda proje ile ilgili bazı temel bilgiler soruluyor. 
Bunları keyfimize göre doldurup proje oluşturmayı tamamlıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/02-new-gradle-project.png&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;0&quot; height=&quot;600&quot; src=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/02-new-gradle-project.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;adım-2-angular-uygulaması-oluşturalım&quot;&gt;Adım 2: Angular Uygulaması Oluşturalım&lt;/h2&gt;

&lt;p&gt;Bu adımda frontend tarafı olan angular uygulamasını yaratacağız.
Bir terminal açıp projenin olduğu dizine gidelim 
ve Angular CLI aracılığıyla frontend isimli projemizi oluşturalım.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/path-to-project
ng new frontend
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Komutu çalıştırdığımızda Angular CLI bir takım sorular soracak.
Bu soruları tercihimize göre cevaplıyoruz.
Uygulama oluşturma tamamlandığında frontend isimli bir klasör
ve içerisinde boş bir Angular hello world uygulamasının oluştuğunu göreceğiz.&lt;/p&gt;

&lt;p&gt;Ana projemizi zaten versiyon kontrol sisteminde tutacağımız için frontend klasöründe
otomatik olarak oluşturulan git repository’sine ihtiyacımız yok.
&lt;code class=&quot;highlighter-rouge&quot;&gt;frontend/.git&lt;/code&gt; klasörünü hiç düşünmeden silebiliriz.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;frontend
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; .git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Terminalde frontend klasörünün içerisinde &lt;code class=&quot;highlighter-rouge&quot;&gt;ng serve&lt;/code&gt; komutunu yazdığımızda
projenin “Angular Live Development Server” üzerinde ayağa kalktığını ve
&lt;a href=&quot;http://localhost:4200/&quot;&gt;http://localhost:4200/&lt;/a&gt; adresinden otomatik olarak üretilmiş
Welcome sayfasına ulaşabildiğimizi görüyoruz.&lt;/p&gt;

&lt;p&gt;Angular projeleri npm paket yöneticisini kullanır ve Angular CLI denen
nodejs ile çalışan bir araç tarafından build edilirler.
Biz “frontend” projesini de gradle ile build etmek istediğimiz için
frontend klasörünün içerisinde aşağıdaki gibi bir &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; dosyası oluşturuyoruz.&lt;/p&gt;

&lt;div class=&quot;language-gradle highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frontendProjectDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${rootProject.projectDir}/frontend&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Bu dosyalar değişmediği sürece gradle up-to-date check sayesinde &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ng build komutu tetiklenmeyecek. Ön yüz tarafında değişiklik olmadığı&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// build'lerde build süresini oldukça kısaltacaktır.&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angularFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fileTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;dir:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frontendProjectDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;includes:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src/**/*.ts&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src/**/*.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src/**/*.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src/**/*.css&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src/**/*.scss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;package.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;package-lock.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;angular.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;tsconfig.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src/assets/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;node_modules/**&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buildAngular&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angularFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${frontendProjectDir}/dist&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// installAngular should be run prior to this task&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;dependsOn&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;npmInstall&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;workingDir&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${frontendProjectDir}&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Add task to the standard build group&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasePlugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BUILD_GROUP&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ng doesn't exist as a file in windows -&amp;gt; ng.cmd&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;os.name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WINDOWS&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;commandLine&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;npm.cmd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;run&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;buildProd&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;commandLine&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;npm&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;run&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;buildProd&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;npmInstall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${frontendProjectDir}/package.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${frontendProjectDir}/node_modules&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;workingDir&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${frontendProjectDir}&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasePlugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BUILD_GROUP&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;os.name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WINDOWS&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;commandLine&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;npm.cmd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;install&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;commandLine&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;npm&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;install&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;dependsOn&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;buildAngular&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“frontend” klasöründeki &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; dosyasında &lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt; anahtarının içerisine
aşağıdaki gibi &lt;code class=&quot;highlighter-rouge&quot;&gt;buildProd&lt;/code&gt; komutunu ekliyoruz. 
Dosyayı aşağıdaki gibi değiştirmeyin komple, sadece bir kısmını yazdım.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;frontend&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ng&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng serve&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;buildProd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng build --prod&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;e2e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng e2e&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“package.json” dosyasına eklediğimiz &lt;code class=&quot;highlighter-rouge&quot;&gt;ng build --prod&lt;/code&gt; komutu build.gradle
dosyasındaki &lt;code class=&quot;highlighter-rouge&quot;&gt;buildAngular&lt;/code&gt; gradle taskı tarafından tetikleniyor.
Asıl build işini sistemimize daha önceden kurduğumuz “Angular CLI” aracı yapıyor.
Gradle burada sadece bir tetikleyici durumunda fakat backend projesi gradle
tarafından build edileceği için ikisini birbirine bağlamamızda 
bu konfigürasyonun oldukça faydası olacak.&lt;/p&gt;

&lt;p&gt;“frontend” projesinin bir gradle projesi olarak ana proje tarafından görülmesi için
ana proje klasöründeki &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt; dosyasını da şu şekilde düzenliyoruz:&lt;/p&gt;

&lt;div class=&quot;language-gradle highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rootProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'springangulardemo'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':frontend'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En sonunda ana proje dizininde &lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew build&lt;/code&gt; komutunu çalıştırdığımızda 
aşağıdaki gibi bir çıktı verince angular projemizin gradle ile build olduğunu
görmüş oluyoruz.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Task :frontend:npmInstall
audited 1460 packages in 5.331s

67 packages are looking for funding
  run `npm fund` for details

found 2 low severity vulnerabilities
  run `npm audit fix` to fix them, or `npm audit` for details

&amp;gt; Task :frontend:buildAngular

&amp;gt; frontend@0.0.0 buildProd /Users/serdarkuzucu/projects/personal/blog/springangulardemo/frontend
&amp;gt; ng build --prod

Generating ES5 bundles for differential loading...
ES5 bundle generation complete.

chunk {0} runtime-es2015.0dae8cbc97194c7caed4.js (runtime) 1.45 kB [entry] [rendered]
chunk {0} runtime-es5.0dae8cbc97194c7caed4.js (runtime) 1.45 kB [entry] [rendered]
chunk {2} polyfills-es2015.f332a089ad1600448873.js (polyfills) 36.1 kB [initial] [rendered]
chunk {3} polyfills-es5.177e85a9724683782539.js (polyfills-es5) 129 kB [initial] [rendered]
chunk {1} main-es2015.05e26c45cc5c75825871.js (main) 217 kB [initial] [rendered]
chunk {1} main-es5.05e26c45cc5c75825871.js (main) 259 kB [initial] [rendered]
chunk {4} styles.09e2c710755c8867a460.css (styles) 0 bytes [initial] [rendered]
Date: 2021-01-10T17:21:55.929Z - Hash: 1d60d39f7d1df34a5244 - Time: 32218ms

BUILD SUCCESSFUL in 47s
2 actionable tasks: 2 executed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Angular kısmı bu kadar. 
Sonraki adıma geçebiliriz.&lt;/p&gt;

&lt;h2 id=&quot;adım-3-spring-boot-uygulaması-oluşturalım&quot;&gt;Adım 3: Spring Boot Uygulaması Oluşturalım&lt;/h2&gt;

&lt;p&gt;Yeni bir Spring Boot uygulaması oluştururken yaptığım şey genellikle çoğu insan gibi
https://start.spring.io/ adresine girip ihtiyacım olan bağımlılıkları seçip 
projeyi zip olarak indirmek. 
Bu sefer onun yerine ihtiyacım olan bağımlılıkları seçip sadece &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;
dosyasını kopyalayacağım.&lt;/p&gt;

&lt;p&gt;Spring Boot projesini aşağıdaki gibi starter arayüzünden konfigüre ettim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/03-start-spring-io.png&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;0&quot; height=&quot;500&quot; src=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/03-start-spring-io.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Daha sonra sayfanın altında bulunan “EXPLORE” butonuna basarak 
&lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; dosyasının içeriğini kopyalıyoruz.&lt;/p&gt;

&lt;p&gt;Ana projenin içerisinde “frontend” klasörüne komşu olacak şekilde 
“backend” isminde bir klasör oluşturuyoruz.
“backend” klasörünün içerisinde &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; isimli bir dosya oluşturuyoruz
ve Spring Boot starter sitesinden kopyaladığımız “build.gradle” dosya içeriğini
bu yeni dosyanın içerisine yapıştırıyoruz.&lt;/p&gt;

&lt;p&gt;Daha sonra bu dosyanın sonuna aşağıdaki satırları da ekliyoruz:&lt;/p&gt;

&lt;div class=&quot;language-gradle highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bootJar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dependsOn&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':frontend:buildAngular'&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'BOOT-INF/classes'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${project(':frontend').projectDir}/dist&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“dependsOn” ile backend projesi build edilmeden önce 
frontend projesinin build edilmiş olması gerektiğini gradle’a bildirmiş oluyoruz.
Böylece frontend projesinin backend projesinden önce build edileceğini
garanti altına almış oluyoruz.&lt;/p&gt;

&lt;p&gt;Angular projesi build olduğunda ortaya “dist” isimli bir klasör çıkar.
Bu klasör Angular projesindeki tüm dosyaların build + uglify edilmiş halini içerir.&lt;/p&gt;

&lt;p&gt;“build.gradle” dosyasına &lt;code class=&quot;highlighter-rouge&quot;&gt;into(&lt;/code&gt; ile başlayan satırda yaptığımız ilave 
ile “dist” klasörünü Spring Boot uygulamasının ürettiği jar’ın içerisine
JVM’in classpath’inde olacak şekilde eklemiş oluyoruz.
“BOOT-INF/classes” klasörü spring uygulamasının classpath’inin root dizinidir.&lt;/p&gt;

&lt;p&gt;Ayrıca Spring Boot starter sitesinde yine otomatik olarak üretilmiş olan 
main sınıfı da projede uygun klasör yapısını oluşturup projeye eklemeyi ihmal etmeyelim.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Proje ana dizininde çalıştıralım:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; backend/src/main/java/com/serdarkuzucu/springangulardemo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yukarıda oluşturduğumuz klasöre SpringAngularDemoApplication.java isminde
aşağıdaki içerikte bir dosya oluşturalım.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.springangulardemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpringAngularDemoApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpringAngularDemoApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Son olarak ana projedeki &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.gradle&lt;/code&gt; dosyasına aşağıdaki gibi
backend projesini de eklememiz gerekiyor:&lt;/p&gt;

&lt;div class=&quot;language-gradle highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rootProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'springangulardemo'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':frontend'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':backend'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu noktadan sonra &lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew build&lt;/code&gt; komutunu çalıştırdığımızda
hata almamamız gerekiyor.&lt;/p&gt;

&lt;p&gt;Spring uygulamasını ayağa kaldırmak için de &lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew bootRun&lt;/code&gt; 
komutunu çalıştırıyoruz. 
Bu komutta da bir hata almamamız gerekiyor.&lt;/p&gt;

&lt;p&gt;İleriki adımlarda test amaçlı kullanılmak üzere projeye 
bir adet örnek REST API ekliyoruz:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.springangulardemo.controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;api/users&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;me&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCurrentUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;firstName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Serdar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lastName&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Kuzucu&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adım-4-spring-bootun-statik-dosya-sunumu-ayarları&quot;&gt;Adım 4: Spring Boot’un Statik Dosya Sunumu Ayarları&lt;/h2&gt;

&lt;p&gt;Angular uygulamasını Spring Boot’un ayağa kalktığı port üzerinde 
sunmaya başlayabilmek için bazı konfigürasyonları yapmak gerekiyor.&lt;/p&gt;

&lt;p&gt;Öncelikle frontend klasörünü bir önceki adımda classpath’e kopyalamıştık.
Angular projesinin “dist” klasörünün içerisinde “frontend” isminde bir klasör
oluşmakta ve biz de o klasörü Spring Boot uygulamasının classpath’ine eklemiş olduk.
Bu sebeple Spring’e ResourceHandler olarak &lt;code class=&quot;highlighter-rouge&quot;&gt;classpath:/frontend/&lt;/code&gt;
dizinini aşağıdaki gibi ekliyoruz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.springangulardemo.configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.servlet.config.annotation.WebMvcConfigurer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebMvcConfiguration&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebMvcConfigurer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addResourceHandlers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ResourceHandlerRegistry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addResourceHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addResourceLocations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;classpath:/frontend/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu şekilde index.html, main.js, styles.css gibi istekler Spring’e ulaştığında
classpath’deki frontend klasörünün içerisinde o dosyaları araması gerektiğini
söylemiş olmaktayız.&lt;/p&gt;

&lt;p&gt;Yukarıdaki ResourceHandler &lt;a href=&quot;http://localhost:8080/index.html&quot;&gt;http://localhost:8080/index.html&lt;/a&gt; 
şeklinde gelen istekleri yakalayıp frontend/index.html dosyasını sunabiliyor fakat 
&lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt;
şeklinde gelen isteklerde “404 Not Found” hatası dönüyor.&lt;/p&gt;

&lt;p&gt;Uygulamamızın root adresini de index.html dosyasına bağlayabilmek için
aşağıdaki gibi bir &lt;code class=&quot;highlighter-rouge&quot;&gt;IndexController&lt;/code&gt; sınıfı yazmamız yeterli.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.springangulardemo.controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IndexController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;forward:index.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adım-5-angular-proxy-ayarları&quot;&gt;Adım 5: Angular Proxy Ayarları&lt;/h2&gt;

&lt;p&gt;Bir geliştirici kendi bilgisayarında projeyi geliştirme amaçlı çalıştığında
Spring Boot jar’ının içerisine gömülmüş Angular projesini çalıştırmamalı.
Geliştiriciler Spring Boot uygulamasını IDE’lerindeki Run Configuration ile main
sınıftan çalıştırmalı veya &lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew bootRun&lt;/code&gt; komutuyla ayağa kaldırmalılar.
Angular uygulamasını ise frontend klasöründe &lt;code class=&quot;highlighter-rouge&quot;&gt;ng serve&lt;/code&gt; komutunu çalıştırarak
&lt;code class=&quot;highlighter-rouge&quot;&gt;Angular Live Development Server&lt;/code&gt; üzerinde ayağa kaldırmalılar.&lt;/p&gt;

&lt;p&gt;Bu durumda frontend 4200, backend ise 8080 portlarında ayağa kalkmış oluyor.
Bu da bazı tarayıcılarda ön yüzden backend uygulamasına atılan isteklerin
CORS politikası sebebiyle bloklanmasına sebep oluyor.&lt;/p&gt;

&lt;p&gt;Bu problemi de ortadan kaldırmak için sadece geliştirici (DEV) ortamında çalışan
Angular proxy ayarlarını yapmamız gerekiyor.
Öncelikle ana projemizin altındaki “frontend” klasörünün içerisine 
“proxy.conf.json” isminde bir dosya oluşturuyoruz, dosyanın içeriği şu şekilde:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;/api&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:8080&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;logLevel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;secure&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu konfigürasyon adresi Angular Live Development Server uygulamasına
&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4200/api&lt;/code&gt; şeklinde gelecek olan tüm istekleri 
&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8080&lt;/code&gt; uygulamasına gönderecek.&lt;/p&gt;

&lt;p&gt;Proxy ayarını “frontend” klasöründeki “angular.json” 
dosyasında da şu şekilde yapıyoruz:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;projects&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;frontend&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;architect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;serve&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;options&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;proxyConfig&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;proxy.conf.json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Düzenli bir API standardınızın olması ve proxy ayarlarının temiz kalması için
backend tarafındaki tüm REST API’lere burda yaptığımız gibi &lt;code class=&quot;highlighter-rouge&quot;&gt;api/**&lt;/code&gt; ön eki ile
veya kendi belirleyeceğiniz başka tek bir ön ek ile başlamanızı tavsiye ederim.
Spring Security konfigürasyonları, custom servlet filtreleri gibi başka işlerde de
oldukça işe yaradığını göreceksiniz ileride.&lt;/p&gt;

&lt;h2 id=&quot;uçtan-uca-testler&quot;&gt;Uçtan Uca Testler&lt;/h2&gt;

&lt;p&gt;Yaptığımız bunca konfigürasyonun çalışıp çalışmadığını uçtan uca test etmek 
için aşağıdaki değişiklikleri yapıyoruz:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app.module.ts&lt;/code&gt; dosyasında &lt;code class=&quot;highlighter-rouge&quot;&gt;HttpClientModule&lt;/code&gt; modülünü import edelim:&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BrowserModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@angular/platform-browser&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NgModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@angular/core&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppRoutingModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./app-routing.module&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./app.component&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HttpClientModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@angular/common/http&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;NgModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;declarations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;BrowserModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AppRoutingModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;HttpClientModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;-- Bu satır&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app.module.ts&lt;/code&gt; dosyası ile aynı dizinde bir adet &lt;code class=&quot;highlighter-rouge&quot;&gt;user.service.ts&lt;/code&gt; dosyası oluşturalım.
Bu dosyanın içeriği aşağıdaki gibi olsun.
Backend’de açtığımız &lt;code class=&quot;highlighter-rouge&quot;&gt;api/users/me&lt;/code&gt; REST API’sini çağırsın.&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@angular/core&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HttpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@angular/common/http&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;rxjs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;providedIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HttpClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCurrentUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Observable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;api/users/me&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app.component.ts&lt;/code&gt; dosyasını aşağıdaki şekilde değiştirelim.
&lt;code class=&quot;highlighter-rouge&quot;&gt;UserService&lt;/code&gt; üzerinden backend’den kullanıcı bilgilerini çeksin.&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OnInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@angular/core&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;./user.service&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;app-root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;templateUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./app.component.html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;styleUrls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./app.component.scss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppComponent&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OnInit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;frontend&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ngOnInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCurrentUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app.component.html&lt;/code&gt; dosyasında da &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;Welcome&amp;lt;/span&amp;gt;&lt;/code&gt; yazan satırı 
aşağıdaki gibi değiştirelim:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Welcome &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;*ngIf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;geliştirici-ortamı-testleri&quot;&gt;Geliştirici Ortamı Testleri&lt;/h3&gt;

&lt;p&gt;Spring Boot ve Angular uygulamalarının ikisini de yeniden başlattıktan sonra 
&lt;a href=&quot;http://localhost:4200&quot;&gt;http://localhost:4200&lt;/a&gt; adresini açtığımızda önceden
sadece Welcome yazan yerde artık “Welcome Serdar Kuzucu” yazdığını 
(backend tarafından dönen firstName ve lastName değerleri) görüyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/04-angular-frontend-home.png&quot; target=&quot;_blank&quot;&gt;
  &lt;img border=&quot;0&quot; height=&quot;400&quot; src=&quot;/assets/posts/2021-01-10-spring-boot-angular-gradle/04-angular-frontend-home.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu şekilde geliştiricilerin frontend ve backend uygulamalarını kendi bilgisayarlarında
ayrı ayrı çalıştırarak iki farklı framework’ün geliştirici ortamı nimetlerinden
faydalanabileceklerini görmüş oluyoruz.&lt;/p&gt;

&lt;h3 id=&quot;production-ortamı-testleri&quot;&gt;Production Ortamı Testleri&lt;/h3&gt;

&lt;p&gt;Production build almak için ana projenin dizininde &lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew build&lt;/code&gt; 
komutunu çalıştırmamız yeterli.&lt;/p&gt;

&lt;p&gt;Gradle dosyalarındaki versiyonlarda bir değişiklik yapmadıysanız build işlemi
sonrasında proje içerisinde şu isimde bir dosya üreyecektir:
&lt;code class=&quot;highlighter-rouge&quot;&gt;backend/build/libs/backend-0.0.1-SNAPSHOT.jar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Bu dosya Spring Boot uygulamasının son çıktısıdır.
Bu dosyanın içerisinde compile olmuş java sınıflarının yanı sıra
Angular projesinin de production build çıktısı yer almaktadır.&lt;/p&gt;

&lt;p&gt;Bu dosyayı doğrudan &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar&lt;/code&gt; ile aşağıdaki gibi çalıştırabiliriz:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; backend/build/libs/backend-0.0.1-SNAPSHOT.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu şekilde uygulamayı ayağa kaldırdığımızda
&lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; adresinden
uygulamayı açabiliriz.&lt;/p&gt;

&lt;p&gt;“Geliştirici Ortamı Testleri” başlığında elde ettiğimiz görüntü 
ile aynı görüntüyü elde ediyorsak başarmışız demektir.&lt;/p&gt;

&lt;h2 id=&quot;kaynak-kod&quot;&gt;Kaynak Kod&lt;/h2&gt;

&lt;p&gt;Bu yazıyı yazarken geliştirdiğim örnek uygulamayı Github hesabımdan
siz de inceleyebilirsiniz: 
&lt;a href=&quot;https://github.com/sedran/spring-boot-angular-gradle-example&quot;&gt;sedran/spring-boot-angular-gradle-example&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sonuç&quot;&gt;Sonuç&lt;/h2&gt;

&lt;p&gt;Son 3 yıl içerisinde bu proje yapısını ekipçe 10’dan fazla projede kullandık.
Build sonrasında üretilen jar dosyasını JVM imajından türetilmiş bir docker imajı 
içerisine koyarak uygulamamızı çok rahat dockerize edebiliyoruz.
Bu sayede bu yapı kubernetes/openshift gibi ortamlarda da sıkıntısız çalışıyor.&lt;/p&gt;

&lt;p&gt;Birbiri ile sürekli iletişim halinde olan frontend 
ve backend uygulamalarının kaynak kodlarının bu şekilde 
bir arada olması bazı uygulamalar ve ekipler için oldukça faydalı. 
Özellikle bir işin frontend tarafı ile backend tarafını 
aynı geliştiricinin geliştirdiği projelerde/ekiplerde 
bu yöntemin daha iyi olduğunu düşünüyorum.&lt;/p&gt;

&lt;p&gt;Bu yöntemle ilgili söyleyebileceğim tek bir negatif düşüncem var,
o da projenin ön yüz kısmı büyüdükçe build sürelerinin aşırı uzaması.&lt;/p&gt;

&lt;p&gt;Ona da ekipçe bir çözüm bulduğumuzda blogumda paylaşıyor olurum.
İnşallah bir gün bulabiliriz.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Jan 2021 14:04:26 +0000</pubDate>
        <link>https://serdarkuzucu.com/2021/01/10/gradle-spring-boot-angular-birlikte-build-etmek/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/2021/01/10/gradle-spring-boot-angular-birlikte-build-etmek/</guid>
        
        
        <category>Java</category>
        
        <category>Programlama</category>
        
        <category>Spring Boot</category>
        
        <category>Angular</category>
        
        <category>Gradle</category>
        
      </item>
    
      <item>
        <title>Dağıtık Uygulamada Büyük Veri Okumak</title>
        <description>&lt;p&gt;2020 senesi içerisinde &lt;a href=&quot;https://inomera.com/&quot;&gt;Inomera&lt;/a&gt;‘da Telekom sektörü için geliştirdiğimiz 
devasa bir projeyi başarıyla canlıya aldık.
Oldukça güncel teknolojiler kullandığımız ve mikroservis mimarisi ile
geliştirdiğimiz bu sistem Kubernetes ortamı üzerinde çalışmakta. 
Bu yazıda bu sistemde yaklaşık &lt;u&gt;22 milyon&lt;/u&gt; satır 
kullanıcı verisini veritabanından okuyup dağıtık bir cache Map’ine
dolduran küçük bir mikroserviste uyguladığımız
dağıtık veri okuma yöntemini anlatmaya çalışacağım.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;önbilgi&quot;&gt;Önbilgi&lt;/h3&gt;

&lt;p&gt;Öncelikle kullandığımız araçlardan ve veri yapısından bahsedelim.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Belleğe doldurmaya çalıştığımız veri her bir &lt;a href=&quot;https://tr.wikipedia.org/wiki/MSISDN&quot;&gt;msisdn&lt;/a&gt;, 
yani müşterinin cep telefonu numarası, için müşterinin izin verdiği kategorilerin
ID’lerinden oluşmakta olup Oracle DB üzerinde başka sistemler tarafından 
yönetilen bir view’dan bize sağlanmakta. 
Burada işin içinde çok fazla farklı müşteri sistemi olduğu için daha performanslı
bir veritabanı veya tablo yapısına geçemiyoruz.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Veriyi belleğe çeken uygulamamız kubernetes üzerinde çalışmakta. 
Dinamik olarak kaynak ihtiyacına göre Kubernetes tarafından
instance sayısı arttırılıp azaltılabilmekte bu sebeple herhangi bir
anda uygulamamızdan kaç adet instance’ın eş zamanlı çalışıyor olabileceği
bilgisi elimizde yok. 
Kubernetes API’lerini kullanarak bu bilgiyi elde edebilecek olsak da
uygulamanın içerisinde Kubernetes bağımlılığı oluşturmak istemedik.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dağıtık cache olarak Kubernetes dışında kurulmuş bir &lt;a href=&quot;https://hazelcast.org/&quot;&gt;Hazelcast&lt;/a&gt; cluster’ımız var.
Herhangi bir müşterinin verisine herhangi bir mikroservisten çok hızlı bir şekilde
ulaşabilmek için Hazelcast üzerindeki bir Map’de tutuyoruz.
Hazelcast’in ayrıca bu işte Queue ve Lock özelliklerini de kullandık.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu boyutta bir veriyi hızlı bir şekilde az bellek kullanarak sorgulayıp, işleyip, Hazelcast’e
doldurmak için uygun bir yol ararken bu yazıda anlatacağım yöntemin 
ihtiyacımızı karşılayacağını öngördük.&lt;/p&gt;

&lt;h3 id=&quot;bellek-kullanımı&quot;&gt;Bellek Kullanımı&lt;/h3&gt;

&lt;p&gt;Bir veritabanına büyük bir veri için sorgu atılacağı zaman düşünülmesi gereken
en önemli şeylerden birisi veritabanından sonuçlar geldiği zaman uygulamanın bellek
tüketiminin nasıl artacağıdır.&lt;/p&gt;

&lt;p&gt;Eğer veriyi işlemeye başlamak için verinin tamamına ihtiyacımız yoksa, 
verileri parça parça alıp, aldıkça işlemeliyiz.&lt;/p&gt;

&lt;p&gt;Bunun için en bilindik yöntemlerden birisi offset/limit sorgusunu offset’i arttırarak tekrar tekrar
atarak sayfalama (pagination) yapmak fakat bu yöntem her seferinde veritabanına yeniden sorgu atmayı
gerektirdiği için faydasından çok zararı oluyor.&lt;/p&gt;

&lt;p&gt;Verileri parça parça çekmek ve işledikçe devamını okumak için Hibernate’deki &lt;code class=&quot;highlighter-rouge&quot;&gt;scroll&lt;/code&gt; özelliğini kullandık.
Sorgunun envai çeşit hibernate kontrolünden ve transaction yönetiminden geçmemesi için
Hibernate’deki &lt;code class=&quot;highlighter-rouge&quot;&gt;StatelessSession&lt;/code&gt; sınıfı üzerinden sorgumuzu &lt;code class=&quot;highlighter-rouge&quot;&gt;read-only&lt;/code&gt; modda attık.&lt;/p&gt;

&lt;p&gt;Ek olarak bir ORM aracı ile sorgu sonuçlarının otomatik olarak entity sınıfına
çevirilmesi özelliğinden de çok fazla reflection ve nesne kullanımının olmaması için
feragat ediyoruz. Garbage Collector ve CPU biraz rahatlamış oluyor bu sayede.&lt;/p&gt;

&lt;p&gt;Hibernate’de bu şekilde bir sorgu nasıl atılır aşağıda ufak bir örnek paylaşıyorum.
Buradaki &lt;code class=&quot;highlighter-rouge&quot;&gt;fetchSize&lt;/code&gt; parametresi veritabanından sonuçların kaçar kaçar belleğe alınacağını belirliyor.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchMsisdnCategories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;QueryState&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetchSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MsisdnCategoriesRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StatelessSession&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statelessSession&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sessionFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openStatelessSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nativeSql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buildNativeSql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NativeQuery&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statelessSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createNativeQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nativeSql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFetchSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setReadOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ScrollableResults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrollableResults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nativeQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ScrollMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FORWARD_ONLY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrollableResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawRowData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrollableResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msisdn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rawRowData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;categoryIds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parseCategoryIdsAsByteArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rawRowData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* Caller processes the result in `rawRowData` */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;processor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MsisdnCategoriesRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msisdn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;categoryIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu method içerisinde çektiğimiz her satırı hemen sonuçları işleyecek olan &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer&lt;/code&gt; sınıfına gönderiyoruz.
Böylece herhangi bir şekilde uygulamanın belleğinde aşırı birikme yaratmamış oluyoruz.&lt;/p&gt;

&lt;p&gt;Yukarıdaki methodu çağıran sınıf &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer&lt;/code&gt; arayüzünden oluşturulmuş bir sınıfı parametre olarak gönderiyor.
Yani DAO katmanından çıkacak olan her bir &lt;code class=&quot;highlighter-rouge&quot;&gt;MsisdnCategoriesRecord&lt;/code&gt; nesnesinin nasıl işleneceğini DAO katmanına
yazmamış oluyoruz.&lt;/p&gt;

&lt;p&gt;DAO katmanındaki methodumuzu çağıran servis katmanı ise gelen her bir sonucu doğrudan Hazelcast’e atıyor.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MsisdnCategoriesDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msisdnCategoriesDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Hazelcast Map&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msisdnCategoriesMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reloadMsisdnCategories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;QueryState&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;msisdnCategoriesDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetchMsisdnCategories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetchSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;msisdnCategoriesMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMsisdn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCategoryIds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sorgunun-dağıtılması&quot;&gt;Sorgunun Dağıtılması&lt;/h3&gt;

&lt;p&gt;Yukarıdaki kod ile bir uygulama instance’ı tek başına DB’deki tüm datayı çekip Hazelcast Map’ine atabilir değil mi?
Peki birden fazla uygulama instance’ı ayakta olduğu durumda datayı nasıl dağıtıyoruz?&lt;/p&gt;

&lt;p&gt;Açık konuşmam gerekirse çözüm bulmakta en çok zorlandığımız kısım burası oldu.
Bir öğle yemeğinde tartışırken aklımıza gelen şu çözümü beğendik ve o günden beri kullanıyoruz.&lt;/p&gt;

&lt;p&gt;Öncelikle atılacak sorguları modüler aritmetik kullanarak parçalara bölüyoruz.
Cep telefon numarası 905XXXXXXXXX formatında 12 adet rakamdan oluşan bir sayı olduğu için 
modüler aritmetik işlemlerinde msisdn alanını tercih ettik.&lt;/p&gt;

&lt;p&gt;Sorgumuzdaki &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; cümleciğinde ise şu şekilde modüler aritmetik koşuluna yer verdik:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*+ parallel(%s) */&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MSISDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;listagg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CATEGORY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;within&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MSISDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CATEGORY_IDS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VIEW_MSISDN_CATEGORIES&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MSISDN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CATEGORY_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;MOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MSISDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MSISDN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yukarıdaki &lt;code class=&quot;highlighter-rouge&quot;&gt;reloadMsisdnCategories&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;fetchMsisdnCategories&lt;/code&gt; isimli methodlarda belki dikkatinizi çekmiştir 
&lt;code class=&quot;highlighter-rouge&quot;&gt;QueryState&lt;/code&gt; isminde bir sınıf kullanıyoruz sorguları oluştururken.
Bu sınıf atılacak olan sorgunun hangi modda hangi kalana göre atılacağı bilgisini taşıyor.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;QueryState&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Serializable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;QueryState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remainder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Böylece mikroservisimizin her bir instance’ının belli bir QueryState için 
sorgu atmasını sağlayabilirsek problem çözülmüş olacaktı.&lt;/p&gt;

&lt;p&gt;Peki o anda mikroservisimizden kaç instance ayakta bilgisini bilmeden 
nasıl tüm instance’lara görev dağıtabiliriz? 
Bu noktada zorlandığımız nokta şuydu, instance sayısı kadar mod almaya çalışıyorduk.
Hiçbir instance’ın boş yatmaması için tüm instance’ların işin bir ucundan tutması gerekiyordu.
Çözümü bulduğumuz gün bunun için instance sayısını bilmeye ihtiyacımız olmadığını keşfettik.&lt;/p&gt;

&lt;p&gt;Aşağıdaki diagramda olduğu gibi, tüm DB’yi okuyup veriyi belleğe yükleme görevini alan mikroservis,
belirli bir mod değerine karar verip, bir hazelcast queue’suna mod sayısı kadar &lt;code class=&quot;highlighter-rouge&quot;&gt;QueryState&lt;/code&gt; nesnesini
farklı kalan değerleri ile dolduruyor. Tüm mikroservis instance’ları hali hazırda açık duran 
birer Thread ile bu belirli Queue’dan gelecek olan mesajları dinlemekteler. 
Her instance Queue’dan kendine düşen &lt;code class=&quot;highlighter-rouge&quot;&gt;QueryState&lt;/code&gt; nesnesindeki mod ve kalan bilgisine göre sorgusunu atıyor
ve veritabanından gelen sonuçları Hazelcast Map’ine dolduruyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/queue-mod-query.png&quot; alt=&quot;hazelcast queue modular_query&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Burada queue’ya attığımız &lt;code class=&quot;highlighter-rouge&quot;&gt;QueryState&lt;/code&gt; nesnelerinin sayısı (ya da mod değerimiz) instance sayısına tam bölünmüyorsa 
bazı instance’lar diğerlerinden daha fazla sorgu atabilirler veritabanına. 
Eğer mod değerimiz instance sayısından küçük ise bazı instance’larımız hiç sorgu atmayabilirler.
Biz mikroservisin instance sayısının alabileceği maksimum değer civarında 
bir sayıyı mod değeri olarak kullanıyoruz 
ve bu değeri runtime’da değiştirebileceğimiz konfigüratif bir yapıda tutuyoruz.&lt;/p&gt;

&lt;h3 id=&quot;ufak-i̇yileştirmeler&quot;&gt;Ufak İyileştirmeler&lt;/h3&gt;

&lt;p&gt;Tüm mikroservislerin işi belli ölçülerde paylaşıp üzerlerine düşen görevi yaptıklarından emin olduktan sonra
artık her bir mikroservisin elindeki işi yaparken daha performanslı çalışması için ne yapabiliriz bunu düşünmenin
zamanı geldi.&lt;/p&gt;

&lt;p&gt;Bu tip uygulamalarda en büyük zaman kaybı genellikle IO (network veya disk) kaynaklı olur.
Veritabanından veriyi okuma kısmındaki git-gel işlemlerini sorguları scroll özelliğiyle atarak oldukça azalttık.
Geriye hazelcast’e verileri gönderdiğimiz yer kalıyor. Hazelcast aracını da uygulamadan ayrı bir cluster şeklinde
kurduğumuz için hazelcast operasyonları da network işlemlerinin büyük çoğunluğunu oluşturmakta.&lt;/p&gt;

&lt;p&gt;DAO katmanından gelen her bir satır için hazelcast’e bir &lt;code class=&quot;highlighter-rouge&quot;&gt;.put&lt;/code&gt; işlemi çağırmak yerine öncelikle
gelen satırları küçük gruplar halinde (1000 adet gibi) toparlayıp sonrasında &lt;code class=&quot;highlighter-rouge&quot;&gt;.putAll&lt;/code&gt; methodunu çağırarak
tek seferde network’e çıkarak küçük bir iyileştirme sağlayabildik. Burada önemli nokta elimizdeki verinin
karakteristiğine göre memory üzerinde fazla birikme oluşturmayacak doğru sayıyı seçmek.&lt;/p&gt;

&lt;p&gt;Sonraki aşamada hazelcast dökümantasyonlarını karıştırırken bildiğimiz java Map’lerinde olmayan 
&lt;code class=&quot;highlighter-rouge&quot;&gt;.set&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;.setAll&lt;/code&gt; isimli methodlarının Hazelcast’in IMap arayüzünde bulunduğunu fark ettik.
&lt;code class=&quot;highlighter-rouge&quot;&gt;put*&lt;/code&gt; türevi methodlar veriyi hazelcast’e koyduktan sonra Map’de ilgili key’e ait varolan eski veriyi dönerken
&lt;code class=&quot;highlighter-rouge&quot;&gt;set*&lt;/code&gt; türevi methodlar herhangi bir şey dönmüyorlar. 
Bu methodları kullandığımız durumda network katmanını kullanmayacağımız bir veri için boşuna meşgul etmemiş oluyoruz.&lt;/p&gt;

&lt;h1 id=&quot;sonuç&quot;&gt;Sonuç&lt;/h1&gt;

&lt;p&gt;Bu yazıda anlattığım yöntemleri kullanarak tek bir instance’da çalışan, 
tüm veriyi veritabanından hazelcast’e doldurması bir saati bulan bir görevi
10 dakikanın altında çalışır hale getirdik. Sorgu attığımız veritabanı yapısında
değişiklik yapma şansımız olsaydı daha iyi süreler de elde edebilirdik 
fakat o yapıyı bizden başka birçok farklı sistem kullandığından öyle bir şansımız malesef bulunmamakta.&lt;/p&gt;

&lt;p&gt;Özetlemek gerekirse bu tip bir görev için kullanmaktan çok keyif aldığım şu teknikleri uyguladık:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Modüler aritmetik kullanarak sorguları dağıtma&lt;/li&gt;
  &lt;li&gt;Bilinen ORM yapısından çıkıp daha native tarafa yakın sorgular kullanmak&lt;/li&gt;
  &lt;li&gt;Veritabanı sorgusunun sonuçlarını scroll ederek okumak&lt;/li&gt;
  &lt;li&gt;Aynı uygulamanın birbirini görmeyen/bilmeyen instance’ları arasında görev dağılımı&lt;/li&gt;
  &lt;li&gt;Verinin bellekte minimum yer kaplayacak formatta tutulması&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu yöntemlerin bu yazıda gösterdiklerimden çok fazla sayıda farklı implementasyonları vardır
fakat büyük işlerde önemli olan yöntemlerdir. Araçlar değişir.&lt;/p&gt;

&lt;p&gt;Bu yazı 2020 Ağustos ayında başladığım fakat bir türlü vakit ayırıp bitiremediğim bir yazıydı.
Anlatımda kopukluklar varsa sebebi budur, hatalarım olduysa affola.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Jan 2021 22:48:20 +0000</pubDate>
        <link>https://serdarkuzucu.com/2021/01/09/dagitik-uygulamada-buyuk-veri-okumak/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/2021/01/09/dagitik-uygulamada-buyuk-veri-okumak/</guid>
        
        
        <category>Java</category>
        
        <category>Programlama</category>
        
      </item>
    
      <item>
        <title>Daha Tatlı Bir Git Log</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;, Git versiyon kontrol sisteminde oluşturulmuş
commit geçmişini tarihsel olarak sondan başa doğru sırasıyla
konsola yazan bir &lt;strong&gt;Git&lt;/strong&gt; komutudur. 
Tek başına kullanıldığında oldukça sıkıcı bir görünüme sahip olan
&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; komutunu birkaç parametre ile daha tatlı bir hale getirebiliyoruz.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;varsayılan-git-log&quot;&gt;Varsayılan Git Log&lt;/h2&gt;

&lt;p&gt;En basit hali ile 
&lt;a href=&quot;https://github.com/spring-projects/spring-boot&quot;&gt;spring-boot&lt;/a&gt; 
projesinde &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; komutunu çalıştırdığımızda
aşağıdaki gibi bir görüntü ile karşılaşırız.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-1.png&quot; alt=&quot;Normal Git Log&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tek-satır-git-log&quot;&gt;Tek Satır Git Log&lt;/h2&gt;

&lt;p&gt;Yukarıdaki şekilde olduğu gibi uzun uzun açıklamaları okumak istemiyorsak,
sadece commit başlıklarını listelemek istiyorsak, 
&lt;code class=&quot;highlighter-rouge&quot;&gt;--oneline&lt;/code&gt; parametresini kullanabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --oneline&lt;/code&gt; komutunu çalıştırdığımızda 
aşağıdaki çıktıyı elde ederiz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-2.png&quot; alt=&quot;Git Log --oneline&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;graph-şeklinde&quot;&gt;Graph Şeklinde&lt;/h2&gt;

&lt;p&gt;Graph şeklinde çıktı almak için &lt;code class=&quot;highlighter-rouge&quot;&gt;--graph&lt;/code&gt; parametresini kullanabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --graph&lt;/code&gt; komutunu çalıştırdığımızda aşağıdaki çıktıyı elde ederiz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-3.png&quot; alt=&quot;Git Log --graph&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bu şekilde ağaç yapısında hangi commit hangi branch’de oluşturulmuş,
hangi branch hangi branch’e birleştirilmiş rahatça görebiliriz.&lt;/p&gt;

&lt;p&gt;Eğer commit mesajlarının sadece başlık kısımları görünsün isterseniz
bu komutta da &lt;code class=&quot;highlighter-rouge&quot;&gt;--oneline&lt;/code&gt; parametresini kullanabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --graph --oneline&lt;/code&gt; komutunu kullanarak aşağıdaki
görüntüyü elde edebiliriz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-4.png&quot; alt=&quot;Git Log --graph --oneline&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;formatlama&quot;&gt;Formatlama&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; komutuna &lt;code class=&quot;highlighter-rouge&quot;&gt;--pretty=format:&amp;lt;string&amp;gt;&lt;/code&gt; parametresini geçerek
kendi istediğimiz bilgiyi istediğimiz şekilde yazmasını sağlayabiliyoruz.&lt;/p&gt;

&lt;p&gt;Bu sayede istersek tek bir satırda veya birden fazla satırda 
commit’in id’sini, 
commit’i işaret eden tag ve branch’leri,
commit yazarını (author),
commitin oluşturulduğu tarihi,
commit mesajının başlığını veya tamamını
ve daha birçok alanını çıktı alabiliriz.&lt;/p&gt;

&lt;p&gt;Formatı girerken tırnak içerisinde belli başlı bazı parametreleri kullanabiliyoruz.&lt;/p&gt;

&lt;p&gt;Aşağıdaki örneğin üzerinden inceleyelim:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;--pretty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s2&quot;&gt;&quot;%h -%d %s (%ar) &amp;lt;%an&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu komuttaki formatın içerisinde bulunan parametreler:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%h&lt;/code&gt;  : Commit ID’sinin 10 karakter uzunluğundaki kısa hali&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%d&lt;/code&gt;  : Commit’e işaret eden branch veya tag’lerin parantez içerisinde virgülle ayrılmış listesi&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%s&lt;/code&gt;  : Commit mesajının başlık satırı (subject)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%ar&lt;/code&gt; : Commit tarihinin şimdiki zamana göre göreceli formatı. Örneğin “3 gün önce”, “5 dakika önce”, vb.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%an&lt;/code&gt; : Commit’i oluşturan kişinin (author) ismi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu komutun çıktısı aşağıdaki gibi olacaktır:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-5.png&quot; alt=&quot;Git Log pretty format&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Daha fazla parametreye hakim olmak isteyenlerin 
&lt;a href=&quot;https://git-scm.com/docs/git-log&quot;&gt;Git Log&lt;/a&gt; dökümantasyonunun
&lt;a href=&quot;https://git-scm.com/docs/git-log#_pretty_formats&quot;&gt;PRETTY FORMATS&lt;/a&gt;
başlığını incelemelerini tavsiye ederim.&lt;/p&gt;

&lt;p&gt;Ben “3 gün önce” gibi göreceli tarihleri sevmediğim için
&lt;code class=&quot;highlighter-rouge&quot;&gt;%cd&lt;/code&gt; format parametresini kullanıyorum.
Bu parametre ek olarak &lt;code class=&quot;highlighter-rouge&quot;&gt;--date=format:&amp;lt;string&amp;gt;&lt;/code&gt; parametresini
kullanabilmeme olanak tanıyor.
Böylece istediğim formatta tarih çıktısı da alabiliyorum.&lt;/p&gt;

&lt;p&gt;Aşağıdaki komut tarih formatını istediğimiz gibi ayarlayabilmemizi sağlıyor.
Yukarıdaki komuttan tek farkı tarihin &lt;code class=&quot;highlighter-rouge&quot;&gt;2020-04-25 13:32:43&lt;/code&gt; şeklinde çıkması.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;--pretty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s2&quot;&gt;&quot;%h -%d %s (%cd) &amp;lt;%an&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:%M:%S'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;renklendirme&quot;&gt;Renklendirme&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--pretty=format:&amp;lt;string&amp;gt;&lt;/code&gt; parametresi ile formatladığımız log
tek renk olarak çıktı vereceğinden okuması biraz zor olacaktır.&lt;/p&gt;

&lt;p&gt;Eğer istersek formatın herhangi bir alanını 
&lt;code class=&quot;highlighter-rouge&quot;&gt;%C(&amp;lt;color&amp;gt;)&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;%C(reset)&lt;/code&gt; arasına alarak renklendirebiliriz.&lt;/p&gt;

&lt;p&gt;Bazı durumlarda renklendirme git ayarlarında devre dışı bırakılmış olabiliyor.
Bu sebeple komuta &lt;code class=&quot;highlighter-rouge&quot;&gt;--color&lt;/code&gt; parametresini de ekleyelim.&lt;/p&gt;

&lt;p&gt;Yukarıdaki son örnekte verdiğim komutta
commit id kırmızı,
branch ve tag isimleri sarı,
tarih yeşil,
author koyu mavi olsun istiyorsak 
aşağıdaki gibi parametrelerin etrafını renklerle sarabiliriz.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--pretty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s2&quot;&gt;&quot;%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)(%cd)%C(reset) %C(bold blue)&amp;lt;%an&amp;gt;%C(reset)&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:%M:%S'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu komutun çıktısı aşağıdaki gibi olacaktır:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-6.png&quot; alt=&quot;Git Log pretty format renkli&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;renkli-formatlı-graph-olarak&quot;&gt;Renkli, Formatlı, Graph Olarak&lt;/h2&gt;

&lt;p&gt;Yukarıdaki renklendirme başlığında verdiğim örnek komutun sonuna
bir de &lt;code class=&quot;highlighter-rouge&quot;&gt;--graph&lt;/code&gt; parametresini eklersek eğer,
hem istediğimiz formatta ve renklendirme ile hem de graph halinde
versiyon geçmişimizi görüntülemiş oluruz.&lt;/p&gt;

&lt;p&gt;Son iyileştirmeyi de yaptığımız durumda komutumuz şu hale gelir:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--pretty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s2&quot;&gt;&quot;%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)(%cd)%C(reset) %C(bold blue)&amp;lt;%an&amp;gt;%C(reset)&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;format:&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:%M:%S'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--graph&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu komutu çalıştırdığımızda çıktı aşağıdaki gibi olacaktır:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/better-git-log-7.png&quot; alt=&quot;Git Log pretty format renkli graph&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;alias-tanımlama&quot;&gt;Alias Tanımlama&lt;/h2&gt;

&lt;p&gt;Yukarıda başlıktan başlığa eklemeler yapıp uzattığımız bu komutu 
her seferinde tekrar elle yazmayacağız veya kopyala yapıştır yapmayacağız.&lt;/p&gt;

&lt;p&gt;Bu komutu git’in alias özelliğini kullanarak bir kısayola atayacağız.&lt;/p&gt;

&lt;p&gt;Terminalde &lt;code class=&quot;highlighter-rouge&quot;&gt;git lg&lt;/code&gt; yazdığımızda yukarıdaki uzun komutun çalışmasını sağlayacağız.&lt;/p&gt;

&lt;p&gt;Aşağıdaki komutu çalıştırdığınız anda git’in global konfigürasyonunda
&lt;code class=&quot;highlighter-rouge&quot;&gt;lg&lt;/code&gt; isminde bir alias tanımlanmış oldu.
Böylece &lt;code class=&quot;highlighter-rouge&quot;&gt;git lg&lt;/code&gt; yazdığımız zaman artık o meşhur uzun komutumuz çalışacak.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  alias.lg &lt;span class=&quot;s2&quot;&gt;&quot;log --color --graph --pretty=format:'%C(red)%h%C(reset) -%C(yellow)%d%C(reset) %s %C(green)(%cd)%C(reset) %C(bold blue)&amp;lt;%an&amp;gt;%C(reset)' --date=format:'%Y-%m-%d %H:%M:%S'&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;kapanış&quot;&gt;Kapanış&lt;/h2&gt;

&lt;p&gt;Bu komutu ilk olarak epey vakit önce 
&lt;a href=&quot;https://coderwall.com/p/euwpig/a-better-git-log&quot;&gt;A better git log&lt;/a&gt;
isimli yazıda görmüştüm.
Birkaç yıldır bu yazıda gösterilen alias’ı ben de kullanıyorum ve bağımlılık oldu artık.
Ekibimde işe başlayan her yeni genç yazılımcı arkadaşıma mutlaka bu alias’ı tanımlattırıyorum.&lt;/p&gt;

&lt;p&gt;Sizin kendi geliştirici ortamlarınızda kullandığınız benzer formatlar varsa
bu yazının altında yorum olarak paylaşabilirsiniz.&lt;/p&gt;

&lt;h2 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/docs/git-log&quot;&gt;https://git-scm.com/docs/git-log&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coderwall.com/p/euwpig/a-better-git-log&quot;&gt;https://coderwall.com/p/euwpig/a-better-git-log&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/git-log&quot;&gt;https://www.atlassian.com/git/tutorials/git-log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 26 Apr 2020 02:40:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/2020/04/26/daha-tatli-bir-git-log/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/2020/04/26/daha-tatli-bir-git-log/</guid>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>Git Commit Mesajı Nasıl Yazılmalı</title>
        <description>&lt;p&gt;Kaynak kodda yaptığımız bir değişikliği versiyon kontrol sistemine kaydederken yapmamız gereken en önemli
maddelerden bir tanesi bu değişikliği iyi yazılmış bir mesaj ile açıklamaktır. Peki iyi bir commit mesajını
diğerlerinden ayıran özellikler nelerdir? Bu yazıda dünya genelinde kabul görmüş bazı standartları göreceğiz.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Öncelikle iyi yazılmış bir commit mesajı daha sonra ne işimize yarar? Güzel bir alıntı ile başlamak istiyorum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Any software project is a collaborative project. It has at least two developers, the original developer and the
original developer a few weeks or months later when the train of thought has long left the station. This later self
needs to reestablish the context of a particular piece of code each time a new bug occurs or a new feature needs to 
be implemented.&lt;/p&gt;

  &lt;p&gt;Peter Hutterer - &lt;a href=&quot;http://who-t.blogspot.com/2009/12/on-commit-messages.html&quot;&gt;On commit messages&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Özetle iyi yazılmış bir commit mesajı;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Kodda yapılan bir değişikliğin üzerinden zaman geçtikten sonra 
bu değişikliğin sebebini kodu okuyarak anlamaya çalışmak 
oldukça zaman alan bir eylemdir.
İyi bir commit mesajı kodu tekrar okumadan değişikliğin neden yapıldığını bize söyler.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Projenin versiyon geçmişinin düzenli ve tutarlı görünmesini sağlar.
Hangi özellik ne zaman geliştirildi, 
bir hata hangi commit ile düzeltildi 
veya ilgili release hangi değişiklikleri içeriyor
gibi kıymetli bilgilere versiyon geçmişinde sadece commit mesajlarını okuyarak ulaşabiliriz.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Yazılan kodu asıl branch’e merge etmeden önce gözden geçiren kişilere yardımcı olur.
Code-review sürecini hızlandırır.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Son olarak bu benim kişisel yorumum, 
iyi yazılmış bir commit mesajı bir yazılımcının işini özenerek yaptığını gösterir.
Yaptığı değişiklikleri commit mesajında güzelce açıklamayan bir geliştiriciye bir gün
“Bu satırı niçin bu şekilde değiştirdin?” diye sormamız gerekebilir 
ve muhtemelen sebebini o da unutmuş olacaktır. 
Bu sefer hatırlamak için onun kodu açıp okuması gerekecektir.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Çeşitli kaynaklardan toparladığım kuralları birer birer açıklamadan önce
iyi bir commit mesajı bulup örnek olarak panoya asmanın güzel olacağını düşünüyorum.&lt;/p&gt;

&lt;p&gt;Aşağıda spring-boot projesinin github repository’sinden aldığım 
&lt;a href=&quot;https://github.com/spring-projects/spring-boot/commit/70d4994502c848b3db82845c97a033448356c938&quot;&gt;bir commit&lt;/a&gt; 
mesajını göstermek istiyorum. 
Bu commit’i gönderen &lt;a href=&quot;https://github.com/scottfrederick&quot;&gt;Scott Frederick&lt;/a&gt; abimiz 
aşağıda yazacağım bütün iyi commit mesajı yazma kurallarını, adeta ibret-i alem için, uygulamış.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Disable exception details on default error views

Prior to this commit, default error responses included the message
from a handled exception. When the exception was a BindException, the
error responses could also include an errors attribute containing the
details of the binding failure. These details could leak information
about the application.

This commit removes the exception message and binding errors detail
from error responses by default, and introduces a
`server.error.include-details` property that can be used to cause
these details to be included in the response.

Fixes gh-20505
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kötü yazılmış mesajlara da örnekler vermeyi düşündüm 
fakat iyi yazılmış mesajlar o kadar nadir projelerde bulunuyor ki
rastgele açtığım projelerin çoğunda kötü örnekler mevcut.
Kötü örnekleri çok iyi bildiğiniz için burayı hiç kirletmeyeceğim.&lt;/p&gt;

&lt;h2 id=&quot;kurallar&quot;&gt;Kurallar&lt;/h2&gt;

&lt;p&gt;Artık kuralları incelemeye başlayabiliriz.
İyi bir commit mesajının kuralları:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#bos-satir&quot;&gt;Başlık ve gövdeyi boş bir satır ile birbirinden ayırın&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#baslik-50-karakter&quot;&gt;Başlığı 50 karakter ile sınırlandırın&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#baslik-buyuk-harf&quot;&gt;Başlığa büyük harf ile başlayın&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#baslik-nokta&quot;&gt;Başlık satırını nokta ile sonlandırmayın&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#baslik-emir-kipi&quot;&gt;Başlığı emir kipi ile yazın&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#govde-72-karakter&quot;&gt;Gövde satırlarında 72 karakter uzunluğunu geçmeyin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#govde-ne-neden&quot;&gt;Gövdede neyi niçin değiştirdiğinizi açıklayın&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;bos-satir&quot;&gt;Başlık ve gövdeyi boş bir satır ile birbirinden ayırın&lt;/h3&gt;

&lt;p&gt;Git versiyon kontrol sistemi yazdığınız mesajı başlık ve gövde olmak üzere iki parça olarak düşünür.
Versiyon geçmişi üzerinde çalışan birçok git komutu bu ayrımı kullanır. 
Örneğin &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; komutu tüm commit’lerin mesajlarını tam haliyle listelerken,
&lt;code class=&quot;highlighter-rouge&quot;&gt;git shortlog&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;git log --oneline&lt;/code&gt; komutları commit’lerin sadece başlıklarını listeler.&lt;/p&gt;

&lt;p&gt;Git’in bu ayrımı yapabilmesinin tek yolu başlık olarak yazdığınız satır ile
gövde olarak yazdığınız ilk satırın arasında bir boş satır bulunmasıdır.
Boş satır bulunmadığı takdirde Git iki satırı birleştirir ve tek satır gibi düşünür.&lt;/p&gt;

&lt;h3 id=&quot;baslik-50-karakter&quot;&gt;Başlığı 50 karakter ile sınırlandırın&lt;/h3&gt;

&lt;p&gt;Commit mesajını kısa tutmak okunabilirliğini arttıracaktır.
Aynı zamanda sizi yaptığınız değişiklikleri kısaca özetlemeye zorlayacağı için
yaptığınız değişiklikleri bir kez daha düşünmenizi sağlayacaktır.&lt;/p&gt;

&lt;p&gt;Eğer yaptığınız değişiklikleri özetleme konusunda zorluk yaşıyorsanız
gerekenden fazla değişikliği tek bir commit’e yüklemeye çalışıyor olabilirsiniz.
Bu durumda yaptığınız değişiklikleri birden fazla commit’e paylaştırmayı düşünebilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --help&lt;/code&gt; komutunu kullanarak &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; hakkında yardım istediğimizde
terminalimize dökülen uzun yazıda aşağıdaki gibi bir bölüm var:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Though not required, it's a good idea to begin the commit message with a single short 
(less than 50 character) line summarizing the change, followed by a blank line and then 
a more thorough description. The text up to the first blank line in a commit message is 
treated as the commit title, and that title is used throughout Git. For example, 
git-format-patch(1) turns a commit into email, and it uses the title on the Subject 
line and the rest of the commit in the body.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yani git de başlık satırının 50 karakterden kısa olmasının iyi olacağını söylüyor.&lt;/p&gt;

&lt;h3 id=&quot;baslik-buyuk-harf&quot;&gt;Başlığa büyük harf ile başlayın&lt;/h3&gt;

&lt;p&gt;Adından anlaşılacağı gibi ilk satırımız commit mesajımızın başlığı görevi görecek.
Tüm başlıklar gibi bu başlığımıza da büyük harf ile başlayalım.&lt;/p&gt;

&lt;h3 id=&quot;baslik-nokta&quot;&gt;Başlık satırını nokta ile sonlandırmayın&lt;/h3&gt;

&lt;p&gt;Nihayetinde commit mesajının başlığı da bir başlıktır 
ve başlıklar nokta ile bitmemeli.&lt;/p&gt;

&lt;p&gt;Ek olarak başlık satırına koyacağınız her bir karakter
kendimize koyduğumuz 50 karakter başlık kotasından tüketmekte.&lt;/p&gt;

&lt;h3 id=&quot;baslik-emir-kipi&quot;&gt;Başlığı emir kipi ile yazın&lt;/h3&gt;

&lt;p&gt;Git kendisi de commit mesajı üretirken emir kipi (Imperative) kullanmakta.&lt;/p&gt;

&lt;p&gt;Örneğin otomatik olarak merge commit oluşturken:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Merge branch 'release/awesome-feature'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu durumda emir kipi ile yazmanın birinci faydası 
git ile aynı kuralları kullanmış oluyoruz.
Bu da versiyon geçmişimizde tutarlılık sağlıyor.&lt;/p&gt;

&lt;p&gt;Git’in kendi repository’sinde de aşağıdaki gibi emir kipi ile yazılmasını istemişler.
Sanki koda davranışını değiştirmesi için emir veriyormuş gibi yazın diyorlar.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Describe your changes in imperative mood, e.g. “make xyzzy do frotz”
  instead of “[This patch] makes xyzzy do frotz” or “[I] changed xyzzy
  to do frotz”, as if you are giving orders to the codebase to change
  its behavior.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://git.kernel.org/pub/scm/git/git.git/tree/Documentation/SubmittingPatches?id=HEAD#n133&quot;&gt;Git Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bir diğer faydası da emir kipi ile yazdığımızda özne kullanmayacağımız 
ve fiillere -ed veya -s gibi ekler gelmeyeceği için mesajımızın kısalması.
Böylece başlık satırımızda 50 karakter limiti kuralımızı delmeden daha fazla bilgi verebileceğiz.&lt;/p&gt;

&lt;h5 id=&quot;yanlış&quot;&gt;Yanlış&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Fixes NullPointerException in SubscriptionRestController&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Fixed NullPointerException in SubscriptionRestController&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;I added direct charging capability for internal partners&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;This commit adds direct charging capability for internal partners&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;doğru&quot;&gt;Doğru&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Fix NullPointerException in SubscriptionRestController&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Add direct charging capability for internal partners&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;govde-72-karakter&quot;&gt;Gövde satırlarında 72 karakter uzunluğunu geçmeyin&lt;/h3&gt;

&lt;p&gt;Kod yazarken de kitap yazarken de okunabilirliğin artması için
bir satıra yazılabilcek maksimum karakter sayısı kısıtlanır.
Çok kısa satırlar sürekli satır atlamak zorunda kalacağımız için okumayı zorlaştırır.
Çok uzun satırlar ise okuyanın alt satıra geçeceği zaman satırın başını kaçırmasına sebep olur.&lt;/p&gt;

&lt;p&gt;Bilgisayar dünyasında geçmişin teknolojik kısıtlamalarının günümüze bıraktığı bir armağan olan
80 karakter limiti bir çok alanda hala kullanılmakta. 
Bu 80 karakter limitinin nereden geldiği ile ilgili çok güzel bir stackexchange yazısı buldum
linki şuraya bırakıyorum boş vaktiniz olur ve merak ederseniz buyrun:
&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width&quot;&gt;Why is 80 characters the ‘standard’ limit for code width?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peki neden 72 karakter? Çünkü bazı git komutlarında commit mesajlarımıza indentation uygulanır.
Bu indentation 72 karakter olarak yazdığımız satırlarımıza bir miktar boşluk ekler
ve mesajlarımız ekranda yazdığımızdan daha fazla yer kaplar.&lt;/p&gt;

&lt;p&gt;Kendimizi 72 karakter ile kısıtladığımızda oluşan çıktı hala 80 karakter limitini aşmamış olur.
80 karakterlik bir terminalde yatay scrollbar’ın görünmesine 
veya yazdığımız satırın terminal tarafından wrap edilmesine sebep olmamış oluruz.&lt;/p&gt;

&lt;h3 id=&quot;govde-ne-neden&quot;&gt;Gövdede neyi neden değiştirdiğinizi açıklayın&lt;/h3&gt;

&lt;p&gt;Commit mesajımızın gövde kısmında, kodda ne değişiklik yaptığımızı
ve bu değişikliği neden yaptığımızı görmek isteriz.
Değişikliğin nasıl yapıldığı veya kodun nasıl çalıştığını merak edenler kodu okumalı.
Commit mesajında “nasıl” sorusuna cevap aramamalıyız.&lt;/p&gt;

&lt;p&gt;Kaliteli bir kod kendisini açıklayabilmelidir.
Eğer açıklayamayacak kadar kompleks bir kodsa, koda yorum yazılmalı.&lt;/p&gt;

&lt;p&gt;Koda bakarak anlayamayacağımız şey, bağlamıdır (context). 
Yani bu kod neden yazıldı?
Hangi bug çözülmeye çalışılırken bu satır değiştirildi?
Bu methodun içine bu koşul hangi özellik geliştirilirken eklendi?
İyi bir commit mesajının bunlar gibi sorulara cevap vermesini bekleriz.&lt;/p&gt;

&lt;p&gt;Beğendiğim bir diğer mesaj içeriği de yazının başlarında verdiğim örnekteki gibi,
“Bu değişiklikten önce kodun davranışı şu şekildeydi,
bu commit sonrasında artık kodun davranışı bu şekilde olacaktır.”
şeklinde anlatmaktır. 
Gördüğüm kadarıyla Spring Boot projesi geliştiricileri bu kuralı uyguluyorlar.&lt;/p&gt;

&lt;p&gt;Gövdede değinilebilecek bir diğer konu ise ilgili commit sonrası nelerin eksik kaldığıdır.
Bu commit ile geliştirilecek özelliğin ne kadarı geliştirildi, ne kadarı başka commit’lere adreslendi?
Bu bilginin de commit mesajında çok kıymetli bir veri olacağını düşünüyorum.&lt;/p&gt;

&lt;h2 id=&quot;öneriler&quot;&gt;Öneriler&lt;/h2&gt;

&lt;p&gt;Bu kısımda herkesin kabul ettiği genel geçer kuralların dışında kalan kendi görüşlerime
veya fikir ayrılıklarının olduğu konularda savunduğum görüşe yer vereceğim.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#ingilizce-yazin&quot;&gt;İngilizce yazın&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#proje-yonetim-id&quot;&gt;Proje yönetim aracı ID’lerini sona ekleyin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pair-programming&quot;&gt;Pair programming yaptığınız kişileri de mesaja dahil edin&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;ingilizce-yazin&quot;&gt;İngilizce yazın&lt;/h3&gt;

&lt;p&gt;Bu madde ile ilgili yazılmış bir şey pek bulamadım o yüzden kendi görüşüm olduğunu belirteyim.
Artık herkes her yerde.
Şu anda çalıştığınız projedeki tüm ekibin Türk olması her zaman böyle kalacağını göstermiyor.
Her an yabancı bir iş arkadaşınız olabilir,
yurt dışından danışmanlık alabilir,
veya projeyi silikon vadisindeki bir firmaya satabilirsiniz.
Daha da güzeli açık kaynak kodlu deyip kaynak kodunuzu dünyanın dört bir yanındaki geliştiricilere açabilirsiniz.&lt;/p&gt;

&lt;p&gt;Birçok sektörde olduğu gibi yazılım sektöründe de iletişim dili olarak İngilizce kullanılıyor.
Nasıl ki kodumuzdaki değişkenleri, fonksiyonları, sınıfları, vs Türkçe isimlendirmiyorsak 
(ki aksini savunanlar da yapanlar da var)
versiyon geçmişini de Türkçe tutmamalıyız.&lt;/p&gt;

&lt;p&gt;Bu 3-4 sene önce benim de yaptığım bir hataydı.
Şimdi versiyon geçmişinde eskiden Türkçe yazdığım mesajları gördükçe sinirleniyorum.
En kötüsü de üzerine epey commit geldikten sonra o mesajları düzeltememek. :)&lt;/p&gt;

&lt;h3 id=&quot;proje-yonetim-id&quot;&gt;Proje yönetim aracı ID’lerini Sona Ekleyin&lt;/h3&gt;

&lt;p&gt;Eğer bir proje yönetim aracı, issue tracker, vs kullanıyorsanuz, 
commit mesajının en sonunda, gövde bittikten sonra yine bir satır boşluk bırakıp,
proje yönetim sistemi ID’mizi yazabiliriz.&lt;/p&gt;

&lt;p&gt;Bu şekilde kullandığımız farklı tool’ların birbirinden haberinin olmasını sağlayabiliriz.
Daha ileriki zamanlarda commit mesajını inceleyen arkadaşlara 
bu iş ile ilgili daha fazla detayın bulunduğu bir kaynak daha sunmuş oluruz.&lt;/p&gt;

&lt;p&gt;Örneğin yazının başında örnek verdiğim commit mesajındaki &lt;code class=&quot;highlighter-rouge&quot;&gt;Fixes gh-20505&lt;/code&gt; yazan satırda
Github’daki issue ID’sinin referans verildiğini görebiliriz.&lt;/p&gt;

&lt;p&gt;Bunu yaparken dikkat edilmesi gereken husus bu issue id’nin commit mesajının
başlığında değil gövdesinde yer almasıdır.&lt;/p&gt;

&lt;p&gt;Bunu başlığın başına koyanları gördüm. 
Sonuna koyanları gördüm.
Başlık satırına issue id dışında başka hiçbir şey yazmayanlar olduğunu gördüm.
Başlığın hem başına hem sonuna koyanını bile gördü bu gözler hey gidi.
Bu konuda çok hassasım çünkü çalıştığım ekipte buna direnen gençler var :)&lt;/p&gt;

&lt;p&gt;Commit mesajının en sonlarında bir satırda issue id aşağıdakilere benzer bir formatta kullanılabilir:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Fixes: FCB-8473
Resolves: FCB-3123
Issue: TEAM-432
Ticket: TKT-83823242
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ayrıca issue id yazıyorum nasıl olsa gidip ordan okusunlar diyip de 
commit mesajını açıklayıcı yazmamak çok ayıptır.
Issue tracking sisteminiz o anda hizmet veremiyor olabilir, 
projede çalışan geliştiricilerden birisinin o anda o sisteme erişimi olmayabilir,
veya bizim gibi ara sıra proje yönetim programınızı değiştirebilirsiniz.
Bu sebeple issue id versek dahi commit mesajında yeteri kadar detayı paylaştığımızdan emin olmalıyız.&lt;/p&gt;

&lt;p&gt;Issue id eğer commit mesajı başlığında olursa ilgili özellik ile ilgili
tüm commit mesajlarında aşağıdaki gibi aynı issue id kendini tekrar eder
ve görüntü kirliliğine yol açar:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;--oneline&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;cb5515d21 Merge branch 'fea/FCB-1126-customer-history-report' into 'release/024-port-out-customer-information'
b5d572d32 FCB-1126 Fix test
c7c80cda3 FCB-1126 Change msisdn-history pojo class
ab68a1d7c FCB-1126 Add customer-history page
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Başlık satırımızdaki 50 karakterlik alan oldukça kıymetli bir alan olduğu için 
issue id yazarak boşa karakter harcamak israf olmaz mı?&lt;/p&gt;

&lt;p&gt;Issue ID’ler branch isimlerinde kullanıldığında daha anlamlı olduğunu düşünenlerdenim.
Böylece sadece merge commit’inin başlığında görürüz kendilerini.
Yukarıdaki kötü örnekte bu şekilde yazılmış bir adet de merge commiti göreceksiniz.&lt;/p&gt;

&lt;h3 id=&quot;pair-programming&quot;&gt;Pair programming yaptığınız kişileri de mesaja dahil edin&lt;/h3&gt;

&lt;p&gt;Eğer pair programming gibi kodu iki kişinin birlikte yazdığı 
fakat klavyeyi tek bir kişinin kullandığı bir yöntem uyguluyorsanız,
birlikte çalıştığınız arkadaşınızın ismini de bir şekilde commit mesajına dahil edin.&lt;/p&gt;

&lt;p&gt;Bunu yapmak çok kolay.
Sadece üşenmeyip aşağıdakine benzer bir satırı commit mesajının sonuna ekleyebilirsiniz.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Co-authored-by: Foo Bar &amp;lt;foo.bar@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Veya birden fazla kişi ile birlikte çalışıyorsanız bunu iki satırda yapabilirsiniz:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Co-authored-by: Foo Bar &amp;lt;foo.bar@example.com&amp;gt;
Co-authored-by: John Bob &amp;lt;john.bob@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu şekilde çalışma arkadaşlarınıza da hak ettikleri krediyi vermiş olursunuz.&lt;/p&gt;

&lt;p&gt;Unutmayın ki kodu ne kadar oturup birlikte yazarsanız yazın
commit’i kimin hesabı ile yaparsanız tüm kodu o kişi yazmış gibi görünecektir.
Bu sebeple commit atarken birlikte çalıştığımız arkadaşlarımızı da unutmamak lazım.&lt;/p&gt;

&lt;h2 id=&quot;bitti&quot;&gt;Bitti&lt;/h2&gt;

&lt;p&gt;Bu yazıda yazdığım maddelerin büyük çoğunluğunu 
&lt;a href=&quot;https://chris.beams.io/&quot;&gt;Chris Beams&lt;/a&gt;‘in 2014 yılında yazdığı 
&lt;a href=&quot;https://chris.beams.io/posts/git-commit/&quot;&gt;How to Write a Git Commit Message&lt;/a&gt;
yazısından öğrendim. 
Bu yazı yıllardır web tarayıcımda yer imi olarak durmaktaydı.
Çalıştığım projelerde gelen Merge Request’leri gözden geçirirken
eğer kötü bir commit mesajı görürsem bu linki yapıştırırdım hemen yorum olarak.&lt;/p&gt;

&lt;p&gt;Bu yazıyı Türkçe şekliyle tekrar yazarak 
ve birlikte çalıştığım ekibimle kullandığımız 
veya kullanmayı arzuladığım pratikleri de dahil ederek 
ülkemizde üretilen yazılımların kalitesinde pozitif bir etki oluşturabilmek en büyük temennim.&lt;/p&gt;

&lt;p&gt;Kaliteli yazılımcı yaptığı işin dökümantasyonunu da iyi yapar.
Commit mesajları da bana göre en güzel dökümantasyon araçlarından biridir.&lt;/p&gt;

&lt;p&gt;Sağlıklı kalın.&lt;/p&gt;

&lt;h2 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://chris.beams.io/posts/git-commit/&quot;&gt;https://chris.beams.io/posts/git-commit/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://who-t.blogspot.com/2009/12/on-commit-messages.html&quot;&gt;http://who-t.blogspot.com/2009/12/on-commit-messages.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://corgibytes.com/blog/2019/03/20/commit-messages/&quot;&gt;https://corgibytes.com/blog/2019/03/20/commit-messages/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yvonnickfrin.dev/a-guide-on-commit-messages&quot;&gt;https://yvonnickfrin.dev/a-guide-on-commit-messages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/power-up-your-pair-programming-with-co-authored-commits-on-github-ffb5d049aed3&quot;&gt;https://hackernoon.com/power-up-your-pair-programming-with-co-authored-commits-on-github-ffb5d049aed3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors&quot;&gt;https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&quot;&gt;https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 19 Apr 2020 13:25:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/2020/04/19/git-commit-mesaji-nasil-yazilmali/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/2020/04/19/git-commit-mesaji-nasil-yazilmali/</guid>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>Thread Local Nedir?</title>
        <description>&lt;p&gt;Bu yazıda Java dünyasında sıkça kullanıldığına 
veya bahsedildiğine şahit olduğumuz &lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; sınıfını inceleyeceğiz.
&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; sınıfı belirlediğimiz nesnelerin sadece aynı thread tarafından erişilebilir olmasını sağlar.
Bu sayede &lt;strong&gt;thread safe&lt;/strong&gt; olmayan nesneleri &lt;strong&gt;thread safe&lt;/strong&gt; kullanmış oluruz.
Bir &lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; nesnesi içerisine yazdığımız nesne, 
&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt;‘e yazan thread tarafından çalıştırılan tüm methodlar tarafından okunabilir olacaktır.
Gelin bu güçlü aracı avantajları ve dezavantajları ile inceleyelim.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;İlk olarak &lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; teknik olarak nedir ona bakalım.
Java’da her yaratılan &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt; nesnesi içerisinde 
o &lt;em&gt;Thread&lt;/em&gt;‘e ait &lt;em&gt;ThreadLocal&lt;/em&gt;‘lerin tutulduğu bir map bulunmaktadır.
İki farklı thread aynı &lt;em&gt;ThreadLocal&lt;/em&gt; nesnesine eriştikleri zaman,
ThreadLocal nesnesi değerini o an kendisine erişen thread’in içerisindeki &lt;em&gt;Map&lt;/em&gt;‘den okur veya yazar.
Bu sayede iki farklı &lt;em&gt;Thread&lt;/em&gt; aynı ThreadLocal nesnesi üzerinden farklı değerlere ulaşırlar.&lt;/p&gt;

&lt;h3 id=&quot;nasıl-tanımlanmalı&quot;&gt;Nasıl Tanımlanmalı?&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; anahtar kelimesi ile yarattığımız her bir yeni &lt;em&gt;ThreadLocal&lt;/em&gt; nesnesi 
&lt;em&gt;Thread&lt;/em&gt; içerisindeki Map’de farklı bir key olarak tutulmaktadır.
Bu sebeple belirli bir amaç için kullanacağımız &lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; nesnesinin 
sadece tek bir instance’ının olduğundan emin olmalıyız.&lt;/p&gt;

&lt;p&gt;Bunun en kolay yolu da &lt;code class=&quot;highlighter-rouge&quot;&gt;static final&lt;/code&gt; olarak tanımlamaktır.
Bu sayede oluşturacağımız &lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; nesnesinin aynı &lt;code class=&quot;highlighter-rouge&quot;&gt;ClassLoader&lt;/code&gt; içerisinde 
sadece tek bir instance’ının olacağını garanti etmiş oluruz.&lt;/p&gt;

&lt;h3 id=&quot;nasıl-kullanılır&quot;&gt;Nasıl Kullanılır?&lt;/h3&gt;

&lt;p&gt;Bu kısımda &lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; üzerindeki method ve constructor’ları inceleyelim.&lt;/p&gt;

&lt;h4 id=&quot;boş-threadlocal-oluşturma&quot;&gt;Boş ThreadLocal Oluşturma&lt;/h4&gt;

&lt;p&gt;İçinde herhangi bir değer taşımayan (null value) bir ThreadLocal, doğrudan boş constructor kullanılarak üretilebilir. 
Bu ThreadLocal nesnesine erişen her bir Thread &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; methodundan &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; değerini alacaktır.&lt;/p&gt;

&lt;p&gt;Bu yazıdaki örneklerde çoğunlukla Java’da thread-safe olmayan 
&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt; sınıfını
&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadLocal&lt;/code&gt; içerisinde kullanacağım.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DATE_FORMAT_THREAD_LOCAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;threadlocal-değerini-atamak&quot;&gt;ThreadLocal Değerini Atamak&lt;/h4&gt;

&lt;p&gt;Boş veya dolu fark etmeksizin bir ThreadLocal nesnesine &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; methodunu kullanarak yeni bir değer atayabilirsiniz.
Atadığınız değer sadece o değeri atadığınız Thread için geçerli olacaktır.
Diğer Thread’lerin atayacakları veya okuyacakları değerler tamamen mevcut Thread’inkinden bağımsız olacaktır.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldSetValueToThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;threadlocal-değerini-okumak&quot;&gt;ThreadLocal Değerini Okumak&lt;/h4&gt;

&lt;p&gt;Bir ThreadLocal üzerinde mevcut Thread için tutulmakta olan değeri almak için &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; methodu kullanılır.
Mevcut Thread tarafından değer atanmamış veya başlangıç değeri bulunmayan bir ThreadLocal üzerindeki 
&lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; methodunu çağırmak &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; değerini dönecektir.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldSetAndGetThreadLocalValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simpleDateFormat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;başlangıç-değeri-ile-oluşturma&quot;&gt;Başlangıç Değeri ile Oluşturma&lt;/h4&gt;

&lt;p&gt;ThreadLocal nesneleri bir başlangıç değerine sahip olabilir. 
Bu durumda &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; çağırmadan &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; methodunu ilk kez çağıran her bir Thread belirlenen initialValue değerini alırlar.
Bu ilk değer her Thread için farklı olabileceği gibi aynı değer de verilebilir.
Bu kısım tamamen kullanıcıya kalmış.
Aşağıda başlangıç değeri ile bir ThreadLocal nesnesi oluşturmanın iki farklı yolunu görelim.&lt;/p&gt;

&lt;h5 id=&quot;initialvalue-methodunun-override-edilmesi&quot;&gt;initialValue Methodunun Override Edilmesi&lt;/h5&gt;

&lt;p&gt;ThreadLocal sınıfı üzerinde bulunan &lt;code class=&quot;highlighter-rouge&quot;&gt;initialValue&lt;/code&gt; methodunun görevi 
bir ThreadLocal nesnesi için ilk değerin üretilmesidir.
Bu method ThreadLocal sınıfı içerisinde &lt;code class=&quot;highlighter-rouge&quot;&gt;return null&lt;/code&gt; şeklinde yazılmıştır.&lt;/p&gt;

&lt;p&gt;Aşağıdaki şekilde &lt;code class=&quot;highlighter-rouge&quot;&gt;initialValue&lt;/code&gt; methodunun override edildiği ThreadLocal’den extend eden
bir anonymous class yazarak kullanacağımız ThreadLocal için bir ilk değer belirleyebiliyoruz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldGetInitialValueWhenInitialValueMethodIsOverridden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;static-withinitial-methodu-i̇le-başlangıç-değerinin-verilmesi&quot;&gt;Static &lt;code class=&quot;highlighter-rouge&quot;&gt;withInitial&lt;/code&gt; Methodu İle Başlangıç Değerinin Verilmesi&lt;/h5&gt;

&lt;p&gt;Java 8 ile birlikte gelen static &lt;code class=&quot;highlighter-rouge&quot;&gt;withInitial&lt;/code&gt; methodunu kullanarak 
başlangıç değeri olan bir ThreadLocal nesnesi yaratabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;initialValue&lt;/code&gt; methodunu override ederken anonymous bir sınıf yaratmıştık.
Bu yöntemde ise ThreadLocal içerisinde tanımlı ThreadLocal’den extend eden
&lt;code class=&quot;highlighter-rouge&quot;&gt;SuppliedThreadLocal&lt;/code&gt; isimli bir private inner class dönülüyor.&lt;/p&gt;

&lt;p&gt;Bu method parametre olarak bir &lt;code class=&quot;highlighter-rouge&quot;&gt;Supplier&lt;/code&gt; alıyor 
ve başlangıç değerine ihtiyacı olan her Thread tarafından bu Supplier çağırılıyor.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldGetInitialValueWhenThreadLocalIsConstructedUsingWithInitialMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withInitial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;threadlocal-değerinin-temizlenmesi&quot;&gt;ThreadLocal Değerinin Temizlenmesi&lt;/h4&gt;

&lt;p&gt;Bir ThreadLocal’e bir Thread tarafından atanan değer yine aynı Thread tarafından temizlenebilir.
Bu işlem &lt;code class=&quot;highlighter-rouge&quot;&gt;remove&lt;/code&gt; methodu kullanılarak yapılır.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;remove&lt;/code&gt; işlemi sonrası &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; methodu &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; dönecektir.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldRemoveThreadLocalValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simpleDateFormat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;SimpleDateFormat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertSame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simpleDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;inheritablethreadlocal-sınıfı&quot;&gt;InheritableThreadLocal Sınıfı&lt;/h4&gt;

&lt;p&gt;Bu sınıf da bir ThreadLocal çeşidi olmakta olup, özelliği şudur:
Bu türdeki ThreadLocal’in üzerindeki mevcut Thread’e ait değer,
çocuk Thread’lere aktarılır.
Çocuk Thread nedir? Mevcut Thread tarafından oluşturulmuş Thread’ler, mevcut thread’in çocuklarıdır.&lt;/p&gt;

&lt;p&gt;Aşağıdaki örnekte oluşturulan yeni Thread’de parent Thread’in ThreadLocal değerinin aktarıldığını görebiliyoruz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inheritableThreadLocalShouldInheritValuesToChild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InheritableThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Demo Value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AtomicReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueInThread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AtomicReference&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;valueInThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Demo Value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueInThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;kullanım-alanları&quot;&gt;Kullanım Alanları&lt;/h3&gt;

&lt;p&gt;Bir değerin bir Thread içerisinde her yerden ulaşılabilir olmasını isteyebileceğimiz
bir çok durumda ThreadLocal kullanılabilir. 
Gördüğüm birkaç örneği aşağıda paylaşıyorum.
Sizler de bildiğiniz ThreadLocal kullanım alanlarını yorum olarak paylaşabilirseniz
birlikte daha fazla şey öğrenebiliriz.&lt;/p&gt;

&lt;h4 id=&quot;kullanıcının-tanınması-authentication&quot;&gt;Kullanıcının Tanınması (Authentication)&lt;/h4&gt;

&lt;p&gt;Bir kullanıcının yaptığı işlem eğer sisteme girişinden çıkışına kadar 
hep aynı Thread içerisinde akışına devam ediyorsa,
kullanıcıya ait giriş bilgileri ThreadLocal üzerinde tutulabilir.&lt;/p&gt;

&lt;p&gt;Mesela bir HTTP server uygulamasında 
kullanıcının Cookie’sinde gönderdiği bir bilgi okunup bir cache server 
veya veritabanı üzerinden kullanıcı bilgisi çekiliyorsa,
bu değer ThreadLocal üzerinde tutularak 
çağırılan tüm methodlar tarafından kullanıcı bilgisinin erişilebilir olması sağlanabilir.&lt;/p&gt;

&lt;p&gt;Örnek olarak Spring Security bir takım filtreler kullanarak 
gelen HTTP isteğinin hangi kullanıcı tarafından yapıldığını anlar
ve &lt;code class=&quot;highlighter-rouge&quot;&gt;SecurityContextHolder&lt;/code&gt; içerisine kullanıcı verisini yazar.
Bu sınıf varsayılan olarak ThreadLocal kullanmaktadır.
İstek Controller veya servis katmanlarımıza geldiğinde istersek &lt;code class=&quot;highlighter-rouge&quot;&gt;SecurityContextHolder&lt;/code&gt; üzerinden
kullanıcı bilgisine static methodlar kullanarak ulaşabiliyoruz.&lt;/p&gt;

&lt;h4 id=&quot;thread-safe-olmayan-sınıfların-singleton-gibi-kullanılması&quot;&gt;Thread-Safe Olmayan Sınıfların Singleton Gibi Kullanılması&lt;/h4&gt;

&lt;p&gt;Yeni nesnesinin oluşturulması pahalı olan sınıfları genellikle singleton yapmaya çalışıyoruz.
Fakat kullandığımız sınıf thread-safe değilse orada çuvallayabiliriz.
Birden fazla thread, thread-safe olmayan singleton bir nesneye eriştiğinde
bu nesnenin state’inde bir takım istenmeyen sonuçlar ortaya çıkabilir.&lt;/p&gt;

&lt;p&gt;Bu durumda oluşturması maliyetli nesnemizi 
uygulama genelinde tek instance olan bir singleton olarak tanımlamak yerine,
her thread’de bir instance’ı olacak şekilde oluşturabiliriz.&lt;/p&gt;

&lt;p&gt;Örnek olarak yukarıdaki örneklerde de kullandığım &lt;code class=&quot;highlighter-rouge&quot;&gt;SimpleDateFormat&lt;/code&gt; sınıfını verebilirim.
Bu sınıf thread-safe olmadığı için global değişken olarak kullanılamıyor.
Onun yerine bu sınıfın ya her methodda yeni bir nesnesinin oluşturulması gerekiyor
ya da ThreadLocal üzerinde tutulması gerekiyor.&lt;/p&gt;

&lt;h4 id=&quot;bir-i̇şlemi-başından-sonuna-kadar-takip-edebilmek&quot;&gt;Bir İşlemi Başından Sonuna Kadar Takip Edebilmek&lt;/h4&gt;

&lt;p&gt;Eğer bir işlem başladığında ThreadLocal’e bir değer girersek ve bittiğinde o değeri silersek,
işlem boyunca aynı thread içerisinde olup biten tüm işlemlerde bu değeri görebiliriz.&lt;/p&gt;

&lt;p&gt;Bu sayede bir method yapmakta olduğu işi hangi context içerisinde yaptığını bilmek isterse
ThreadLocal’den alabilir.&lt;/p&gt;

&lt;p&gt;Örnek olarak logging kütüphanelerindeki MDC yapısı verilebilir.
MDC yapısını kullanarak bir işin başından sonuna kadar loglara aynı değerin yazılmasını sağlayabiliriz.
Örneğin sisteme gelen her istek için unique bir TransactionId üretiyoruz 
ve bu istek sırasında yazılan tüm loglarda bu TransactionId değerini görüyoruz.&lt;/p&gt;

&lt;p&gt;MDC ile log takibi yapmak ile ilgili daha önce yazmış olduğum bir yazı için tıklayın:
&lt;a href=&quot;/slf4j-mdc-kullanarak-log-takibini-kolaylastirma/&quot;&gt;Slf4j: MDC Kullanarak Log Takibini Kolaylaştırma&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;dikkat&quot;&gt;Dikkat!&lt;/h3&gt;

&lt;p&gt;Global değişken kullanmanın yazılımın tasarımı açısından kötü olduğu konusunda 
birçok yazılım geliştirici uzun zamandır hemfikir. 
ThreadLocal kavramı da global variable kavramına çok yakın olduğu için zorunlu kalınmadıkça kullanılmamalıdır.
Mümkün olduğunda ThreadLocal kullanmak yerine 
methodlara ilgili değerler parametre geçilebilir, 
cache kütüphaneleri kullanılabilir 
veya çeşitli dependency injection yöntemleri kullanılabilir.&lt;/p&gt;

&lt;p&gt;Yazılım geliştirirken fark ettiğim problemlerden birisi de 
ThreadLocal kullanılan sınıfların unit testini yazmanın
dependency injection ile yazılmış sınıfların testini yazmaktan daha zor olduğudur.&lt;/p&gt;

&lt;p&gt;Ayrıca ThreadLocal’lerin kullanıldıkları context’lere göre
dikkat edilmesi gereken bazı hususlar ortaya çıkmaktadır.&lt;/p&gt;

&lt;p&gt;Bunlardan en yaygınları memory leak’ler 
ve yanlış değerlerin yanlış Thread’lerde bulunması durumlarıdır.&lt;/p&gt;

&lt;p&gt;Öncelikle memory leak oluşma durumuna bir bakalım.&lt;/p&gt;

&lt;h4 id=&quot;classloader-leak&quot;&gt;ClassLoader Leak&lt;/h4&gt;

&lt;p&gt;Application Server dediğimiz tomcat, weblogic ve jboss gibi uygulamalara 
birden fazla farklı uygulamayı yükleyebiliyoruz.
Application Server’lar kendileri de bir java process’i olduğu için 
bir Application Server’a yüklediğimiz tüm bu uygulamalar tek bir JVM içerisinde çalışıyorlar.&lt;/p&gt;

&lt;p&gt;Application Server ise uygulamaların arasındaki ayrımı sağlayabilmek için 
hepsine ayrı ClassLoader nesnesi yaratır. 
Bu uygulamalar ve onların bağımlı olduğu kütüphaneler bu ClassLoader tarafından JVM’e yüklenir.&lt;/p&gt;

&lt;p&gt;Belirli bir uygulamayı kapatıp açarken veya yeni bir versiyonunu canlıya alırken
Application Server ilgili uygulamayı kapatır 
ve bağlı olduğu ClassLoader da Garbage Collector tarafından yok edilir.&lt;/p&gt;

&lt;p&gt;Application Server’larda gelen HTTP istekleri işlemek için kullandığı bir Thread Pool bulunur.
Bu ThreadPool’daki Thread’ler genellikle Application Server ayakta olduğu sürece yaşarlar.
Eğer Application Server’a yüklü bir uygulama HTTP isteğini yorumlarken ThreadLocal’e bir şey yazarsa 
ve bu isteğe cevap verirken ThreadLocal’e yazdığı değerleri silmezse 
bu değer Application Server’a ait olan Thread’in üzerinde kalır.&lt;/p&gt;

&lt;p&gt;Application Server üzerindeki bir uygulamayı kapatırken eğer Application Server’ın ThreadLocal’i üzerinde
kapatılmakta olan uygulanın ClassLoader’ı tarafından JVM’e yüklenmiş bir sınıfa ait bir nesne kaldıysa,
bu nesne tüm ClassLoader’ın Garbage Collector tarafından silinmesini engeller.
Bir ClassLoader belki binlerce sınıfı memory’ye yükleyeceği için Garbage Collect olmaması çok büyük problemdir.
Uygulama Application Server üzerinde tekrar ayağa kaldırılırken yepyeni bir ClassLoader oluşturulur
ve yeniden tüm class’lar load edilir.
Bu şekilde uygulamalar aç/kapa yaptıkça Application Server üzerinde ClassLoader’lar birikecektir
ve nihayetinde &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.OutOfMemoryError: PermGen space&lt;/code&gt; hatası alınacaktır.
Bu noktadan sonra artık Application Server’ın restart edilmesi gerekecektir.&lt;/p&gt;

&lt;p&gt;Eğer Application Server Thread’lerinin üzerine bir ThreadLocal yazılıyorsa
bunun iş biterken silindiğinden emin olunması gerekir.&lt;/p&gt;

&lt;p&gt;Bu sebeple ThreadLocal yazıldıktan sonraki işlem &lt;code class=&quot;highlighter-rouge&quot;&gt;try/finally&lt;/code&gt; bloğu ile yazılmalı.
Ben aşağıdaki gibi yazıyorum genellikle:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;USER_CONTEXT_THREAD_LOCAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FilterChain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do some work to fill userContext...&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// other stuff...&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// things...&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;USER_CONTEXT_THREAD_LOCAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;USER_CONTEXT_THREAD_LOCAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;threadlocal-değerinin-i̇stenmeyen-yerlere-gitmesi&quot;&gt;ThreadLocal Değerinin İstenmeyen Yerlere Gitmesi&lt;/h4&gt;

&lt;p&gt;Yukarıdaki ClassLoader leak konusuna çok benziyor. 
Eğer bir ThreadLocal set ediyorsak çok büyük ihtimalle aynı method içerisinde onu silme fırsatımız olacaktır.&lt;/p&gt;

&lt;p&gt;Örneğin bir ExecutorService kullanıyorsak ve ona çalıştırması için verdiğimiz Runnable sınıfında ThreadLocal
kullanımı yapıyorsak, aynı Runnable içerisinde bu ThreadLocal’i silmeliyiz.
Yoksa ExecutorService aynı thread’leri kullanarak başka işleri de koşacağı için 
ThreadLocal’e set ettiğimiz değer alakasız başka işler tarafından erişilebilir olacaktır.&lt;/p&gt;

&lt;p&gt;Aynı zamanda executorService’e submit ettiğimiz Runnable ayrı bir thread tarafından çalıştırılacağı için,
&lt;code class=&quot;highlighter-rouge&quot;&gt;executorService.submit()&lt;/code&gt; methodunu çağırdığımız thread’deki ThreadLocal’leri görmeyecektir.&lt;/p&gt;

&lt;p&gt;Aşağıdaki kodda executorService’e bir task verilmeden önce oradaki iş parçacığı ile paylaşmak istediğimiz
ThreadLocal değeri önce bir değişkene aktarılıyor.
Daha sonra executorService’in içerisinde işi çalıştıran Thread’in ThreadLocal’ine tekrar set ediliyor.
Daha önemlisi, executorService’deki işimiz bittiğinde &lt;code class=&quot;highlighter-rouge&quot;&gt;finally&lt;/code&gt; bloğu içerisinde ThreadLocal’i tekrar temizliyoruz.
Bu sayede ExecutorService tarafından yapılan diğer işlere fazladan bilgi vermemiş oluyoruz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;executeBatchTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;USER_CONTEXT_THREAD_LOCAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;executorService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;USER_CONTEXT_THREAD_LOCAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Do work in executor thread &lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;USER_CONTEXT_THREAD_LOCAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bitiriyoruz&quot;&gt;Bitiriyoruz&lt;/h3&gt;

&lt;p&gt;ThreadLocal hakkında söylenebilecek her şey bu kadar değildir elbette.
Elimden geldiğince hakkında bildiklerimi anlatmaya çalıştım.&lt;/p&gt;

&lt;p&gt;Her ne kadar hatalı kullandığımız bir ThreadLocal ile production sistemlerinde başımızı belaya sokabilecek olsak da,
meşhur büyüğümüz &lt;a href=&quot;https://en.wikipedia.org/wiki/Joshua_Bloch&quot;&gt;Joshua Bloch&lt;/a&gt; array ile de bunu yapabilirsiniz demiş :)&lt;/p&gt;

&lt;p&gt;Bu sebeple Joshua Bloch’un bu konudaki aşağıdaki meşhur alıntısıyla bitiriyorum:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Can you cause unintended object retention with thread locals? 
Sure you can. 
But you can do this with arrays too. 
That doesn’t mean that thread locals (or arrays) are bad things. 
Merely that you have to use them with some care. 
The use of thread pools demands extreme care. 
Sloppy use of thread pools in combination with sloppy use of thread locals can cause unintended object retention, 
as has been noted in many places. 
But placing the blame on thread locals is unwarranted.” 
    - Joshua Bloch&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;kaynaklar&quot;&gt;Kaynaklar&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/InheritableThreadLocal.html&quot;&gt;https://docs.oracle.com/javase/8/docs/api/java/lang/InheritableThreadLocal.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tutorials.jenkov.com/java-concurrency/threadlocal.html&quot;&gt;http://tutorials.jenkov.com/java-concurrency/threadlocal.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.baeldung.com/java-threadlocal&quot;&gt;https://www.baeldung.com/java-threadlocal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/40079616/what-is-classloader-leak&quot;&gt;https://stackoverflow.com/questions/40079616/what-is-classloader-leak&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/817856/when-and-how-should-i-use-a-threadlocal-variable&quot;&gt;https://stackoverflow.com/questions/817856/when-and-how-should-i-use-a-threadlocal-variable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/17008906/what-is-the-use-and-need-of-thread-local&quot;&gt;https://stackoverflow.com/questions/17008906/what-is-the-use-and-need-of-thread-local&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://plumbr.io/blog/locked-threads/how-to-shoot-yourself-in-foot-with-threadlocals&quot;&gt;https://plumbr.io/blog/locked-threads/how-to-shoot-yourself-in-foot-with-threadlocals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 12 Apr 2020 21:50:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/2020/04/13/thread-local-nedir-java/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/2020/04/13/thread-local-nedir-java/</guid>
        
        
        <category>Java</category>
        
        <category>Programlama</category>
        
      </item>
    
      <item>
        <title>Slf4j: MDC Kullanarak Log Takibini Kolaylaştırma</title>
        <description>&lt;p&gt;Bu yazıda birden fazla sınıfın log yazdığı bir log dosyasında spesifik bir HTTP isteğine ait logları nasıl buluruz sorusuna kolay uygulanabilir bir cevap paylaşacağım. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Problemi doğuran şey sistemdeki aynı methodlara aynı anda birden fazla istek geldiğinde logların birbirine karışması ve hangi logun hangi isteğe ait olduğunun anlaşılamaması.&lt;/p&gt;

&lt;p&gt;Çözüm; sisteme gelen her HTTP isteği için unique bir string oluşturacağız ve bu değerin bu istek boyunca tüm loglarda görünmesini sağlayacağız. Bunu amele gibi elimizle her log statement’a eklemek yerine SLF4J’nin MDC (Mapped Diagnostic Context) yöntemini kullanacağız.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dilerseniz bu yazıdaki örnek uygulamaya aşağıdaki github adresimden ulaşabilirsiniz:&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/sedran/mdc-log-track-id-demo&quot;&gt;Github: Slf4j MDC Kullanarak Log Takibini Kolaylaştırma&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;demo-uygulamanın-oluşturulması&quot;&gt;Demo Uygulamanın Oluşturulması&lt;/h2&gt;

&lt;p&gt;Öncelikle bu yazı için ufak bir Spring Boot demo uygulaması geliştirdim.
Intellij Idea’da projeyi yaratırken Gradle seçmeyi unuttuğum için Maven projesi olarak yaratıldı. 
O sebeple &lt;code&gt;pom.xml&lt;/code&gt; dosyasını paylaşıyorum:&lt;/p&gt;

&lt;h3 id=&quot;pomxml&quot;&gt;pom.xml&lt;/h3&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.1.2.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;relativePath/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- lookup parent from repository --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.serdarkuzucu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mdc-demo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;mdc-demo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;MDC Demo Project&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;java.version&amp;gt;&lt;/span&gt;1.8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/java.version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mdcdemoapplicationjava&quot;&gt;MdcDemoApplication.java&lt;/h3&gt;

&lt;p&gt;Spring Boot uygulamasını ayağa kaldıran main methodu içeren sınıf.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MdcDemoApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MdcDemoApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;randomnumberservicejava&quot;&gt;RandomNumberService.java&lt;/h3&gt;

&lt;p&gt;Random sayı üreten ve bir miktar log üreten bir sınıf.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * @author Serdar Kuzucu
 */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RandomNumberService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RandomNumberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generateRandomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;generated random number is {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;randomnumbercontrollerjava&quot;&gt;RandomNumberController.java&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;/random-number&lt;/code&gt; URL’ine gelen istekleri cevaplayacak olan controller. Bir miktar log üretecek, &lt;code&gt;RandomNumberService&lt;/code&gt; sınıfına çağrı yapacak. Bu sayede istek attığımızda iki farklı sınıfın log yazmasını göreceğiz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.service.RandomNumberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * @author Serdar Kuzucu
 */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RandomNumberController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RandomNumberController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RandomNumberService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RandomNumberController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RandomNumberService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;randomNumberService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;random-number&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRandomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;RandomNumberController.getRandomNumber invoked&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generateRandomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;randomNumber={}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseBody&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;responseBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randomNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;RandomNumberController.getRandomNumber result={}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;applicationproperties&quot;&gt;application.properties&lt;/h3&gt;

&lt;p&gt;Bu dosyada &lt;code&gt;logging.pattern.console&lt;/code&gt; property’sini ezerek 
Spring Boot’un varsayılan log pattern’ını değiştiriyoruz. 
Demo için gerek olmayabilir fakat bence böyle loglar daha güzel görünüyor.&lt;/p&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;logging.pattern.console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} |&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(%5p) | &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(%logger{0}){cyan} &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(:){faint} &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%m%n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uygulamayı çalıştırıp tarayıcımızda &lt;code&gt;http://localhost:8080/random-number&lt;/code&gt; 
URL’ini açarsak, loglarda şunların çıktığını göreceğiz:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2019-02-13 01:17:36.582 | INFO | RandomNumberController : RandomNumberController.getRandomNumber invoked
2019-02-13 01:17:36.582 | INFO | RandomNumberService : generated random number is 773800082
2019-02-13 01:17:36.583 | INFO | RandomNumberController : randomNumber=773800082
2019-02-13 01:17:36.583 | INFO | RandomNumberController : RandomNumberController.getRandomNumber result={value=773800082}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aynı anda bu satırlardan yüzlerce karışık sırada log dosyasında olduğunu düşünelim. 
Birbirinden ayırt etmekte zorlanırdık.&lt;/p&gt;

&lt;h2 id=&quot;mdc-yönteminin-uygulanması&quot;&gt;MDC Yönteminin Uygulanması&lt;/h2&gt;

&lt;p&gt;Öncelikle bu işe bir isim verelim. 
Biz ürettiğimiz bu unique string’e şirkette &lt;b&gt;log takip kodu&lt;/b&gt; diyoruz. 
Kodun içerisinde &lt;code&gt;logTrackId&lt;/code&gt; olarak kullanacağım. 
Şimdi &lt;code&gt;logTrackId&lt;/code&gt; üreten &lt;code&gt;LogTrackIdGenerator&lt;/code&gt; arayüzünü ve 
&lt;code&gt;UUIDLogTrackIdGenerator&lt;/code&gt; sınıfını yazalım:&lt;/p&gt;

&lt;h3 id=&quot;logtrackidgeneratorjava&quot;&gt;LogTrackIdGenerator.java&lt;/h3&gt;

&lt;p&gt;“Program to interfaces, not implementations” paradigmasına bağlı kalarak 
&lt;code&gt;logTrackId&lt;/code&gt; üreten bir interface tasarlıyoruz:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * @author Serdar Kuzucu
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogTrackIdGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;uuidlogtrackidgeneratorjava&quot;&gt;UUIDLogTrackIdGenerator.java&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;LogTrackIdGenerator&lt;/code&gt; interface’i için UUID üretip içindeki tire (-) 
karakterini silen bir implementasyon yazıyoruz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * Generates a random UUID without hyphens
 *
 * @author Serdar Kuzucu
 */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UUIDLogTrackIdGenerator&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogTrackIdGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;randomUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;logtrackidgeneratingfilterjava&quot;&gt;LogTrackIdGeneratingFilter.java&lt;/h3&gt;

&lt;p&gt;Bir adet &lt;code&gt;javax.servlet.Filter&lt;/code&gt; implementasyonu yazıyoruz 
ve üzerine &lt;code&gt;@Component&lt;/code&gt; annotation’ını ekliyoruz. 
Bu şekilde annotate ettiğimiz sınıflar Spring Boot tarafından 
otomatik olarak taranıp bean olarak ayağa kaldırılır. 
Üstüne üstlük Filter türünde olduğu için Spring Boot bu bean’i 
tüm HTTP isteklerinin önüne filtre olarak yerleştirir. 
Yani sunucuya gelen tüm istekler &lt;code&gt;doFilter&lt;/code&gt; methodundan geçer.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.mdcdemo.util.LogTrackIdGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.slf4j.MDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * @author Serdar Kuzucu
 */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogTrackIdGeneratingFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;LogTrackIdGeneratingFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG_TRACK_ID_MDC_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;logTrackId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogTrackIdGenerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackIdGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogTrackIdGeneratingFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;LogTrackIdGenerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackIdGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logTrackIdGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackIdGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FilterChain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filterChain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackIdGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;MDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_TRACK_ID_MDC_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;no&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Log track id {} generated&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logTrackId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;filterChain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;servletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;MDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_TRACK_ID_MDC_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;doFilter&lt;/code&gt; methodunun içerisinde &lt;code&gt;LogTrackIdGenerator&lt;/code&gt; aracılığıyla 
ürettiğimiz log takip kodunu &lt;code&gt;org.slf4j.MDC&lt;/code&gt; sınıfının statik bir methodu olan
&lt;code&gt;put&lt;/code&gt; methoduna verdik. 
MDC, &lt;code&gt;ThreadLocal&lt;/code&gt; üzerinde duran bir Map gibi çalışır. 
Yani bu veri yapısına bir bilgi girerken bir key kullanırız. 
Log takip kodu için &lt;code&gt;logTrackId&lt;/code&gt; keyini kullandım. 
Daha sonra &lt;code&gt;application.properties&lt;/code&gt; dosyasında log pattern’ine bu keyi gireceğiz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filterChain.doFilter&lt;/code&gt; çağırarak HTTP isteğini bizden sonra çalışacak olan 
filtreler varsa onlara veya doğrudan isteği karşılayacak olan Servlet’e gönderiyoruz. 
Bu esnada geliştirdiğimiz &lt;code&gt;RandomNumberController&lt;/code&gt; da tetiklenmiş oluyor. 
Daha sonra ThreadLocal içerisine attığımız MDC değeri Thread’in üzerinde kalmasın diye 
&lt;code&gt;MDC.remove(key)&lt;/code&gt; çağırıyoruz.&lt;/p&gt;

&lt;h3 id=&quot;applicationproperties-1&quot;&gt;application.properties&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;logTrackId&lt;/code&gt; keyi ile MDC üzerine yerleştirdiğimiz veriyi 
log pattern’ine eklemek için, 
&lt;b&gt;application.properties&lt;/b&gt; dosyasında herhangi bir yere 
&lt;code&gt;%X{logTrackId:-none}&lt;/code&gt; ekliyoruz. 
&lt;code&gt;:-none&lt;/code&gt; kısmı isteğe bağlı olarak eklenmeyebilir de. 
MDC’nin içinde log takip kodu olmadığı zamanlarda loga “none” yazmasını sağlıyor. 
Benim &lt;b&gt;application.properties&lt;/b&gt; dosyam aşağıdaki gibi:&lt;/p&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;logging.pattern.console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} |&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(%5p) | &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(%X{logTrackId:-none}) | &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(%logger{0}){cyan} &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%clr(:){faint} &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;%m%n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uygulamayı çalıştırıp tarayıcımızda &lt;code&gt;http://localhost:8080/random-number&lt;/code&gt; 
URL’ini açarsak, loglarda şunların çıktığını göreceğiz:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2019-02-13 01:37:55.357 | INFO | 95e3e1b5dea0427197e7ef78cf42e416 | RandomNumberController : RandomNumberController.getRandomNumber invoked
2019-02-13 01:37:55.357 | INFO | 95e3e1b5dea0427197e7ef78cf42e416 | RandomNumberService : generated random number is -916135574
2019-02-13 01:37:55.357 | INFO | 95e3e1b5dea0427197e7ef78cf42e416 | RandomNumberController : randomNumber=-916135574
2019-02-13 01:37:55.357 | INFO | 95e3e1b5dea0427197e7ef78cf42e416 | RandomNumberController : RandomNumberController.getRandomNumber result={value=-916135574}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Gördüğünüz gibi &lt;code&gt;logTrackId=95e3e1b5dea0427197e7ef78cf42e416&lt;/code&gt; değeri üretildi 
ve bu işleme ait tüm log satırlarında yazdığı görüldü.&lt;/p&gt;

&lt;p&gt;MDC ile ilgili anlatmak istediklerim bunlar. 
Sorularınız olursa aşağıdaki yorum formunu dilediğiniz gibi doldurabilirsiniz. 
Sizin de MDC ile ilgili farklı kullanım senaryolarınız varsa duymak isterim.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Feb 2019 22:49:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/slf4j-mdc-kullanarak-log-takibini-kolaylastirma/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/slf4j-mdc-kullanarak-log-takibini-kolaylastirma/</guid>
        
        
        <category>Java</category>
        
        <category>Programlama</category>
        
      </item>
    
      <item>
        <title>User Threads vs Daemon Threads</title>
        <description>&lt;p&gt;Java’da birden fazla görevi eş zamanlı gerçekleştirmek istediğimizde 
&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt;‘lerden faydalanırız. 
Yeni bir &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt; nesnesi oluşturur, 
constructor argümanı olarak bir &lt;code&gt;Runnable&lt;/code&gt; geçeriz veya 
&lt;code&gt;Thread&lt;/code&gt; sınıfını extend eder, 
&lt;code&gt;void run()&lt;/code&gt; methodunu override ederiz. 
Bunları daha önce yaptıysanız belki &lt;code&gt;Thread&lt;/code&gt; sınıfının üzerindeki 
&lt;code&gt;setDaemon(boolean on)&lt;/code&gt; methodunu da farketmişsinizdir. 
Peki kimdir bu daemon?&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;p&gt;In multitasking computer operating systems, a daemon is a computer program that runs as a background
process, rather than being under the direct control of an interactive user.&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt;
  &lt;a href=&quot;https://en.wikipedia.org/wiki/Daemon_(computing)&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Wikipedia, &lt;cite title=&quot;Daemon&quot;&gt;Daemon (Computing)&lt;/cite&gt;
  &lt;/a&gt;
&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;user-threads-vs-daemon-threads&quot;&gt;User Threads vs Daemon Threads&lt;/h2&gt;

&lt;p&gt;Java iki adet Thread türü tanımlar:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;User Threads:&lt;/strong&gt; Bu tip Thread’ler bitmeden JVM kapanmaz. Eğer &lt;code class=&quot;highlighter-rouge&quot;&gt;System.exit&lt;/code&gt; çağırmadıysanız.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Daemon Threads:&lt;/strong&gt; Tüm User Thread’leri sonlandığında JVM bu Thread’leri gözünün yaşına bakmadan sonlandırır.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bu türler ile ilgili sahip olduğum bilgiler şu şekilde:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JVM’in kendi kendine sonlanması için tüm User Thread tipindeki Thread’ler sonlanmış olmalıdır.&lt;/li&gt;
  &lt;li&gt;Thread’ler daemon olma/olmama durumunu kendilerini yaratan Thread’den alırlar.&lt;/li&gt;
  &lt;li&gt;JVM’e ait çoğu Thread daemon tipindedir. 
Örneğin Garbage Collection Thread’leri. 
JVM sonlanmak için çalışmakta olan bir Garbage Collection işleminin tamamlanmasını beklemez.&lt;/li&gt;
  &lt;li&gt;Bir Thread &lt;code class=&quot;highlighter-rouge&quot;&gt;start()&lt;/code&gt; edilmeden önce daemon olup olmadığına karar verilmelidir. 
Eğer çalışmakta olan bir &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread&lt;/code&gt; üzerinde &lt;code class=&quot;highlighter-rouge&quot;&gt;setDaemon(boolean)&lt;/code&gt; 
çağırırsanız &lt;code class=&quot;highlighter-rouge&quot;&gt;IllegalThreadStateException&lt;/code&gt; alırsınız.&lt;/li&gt;
  &lt;li&gt;I/O benzeri kritik işler için daemon thread kullanımı kesinlikle tavsiye edilmez. 
Çünkü JVM kapanırken daemon thread’leri &lt;code class=&quot;highlighter-rouge&quot;&gt;finally&lt;/code&gt; bloklarını bile çalıştırmadan öldürür.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bu konular ile ilgili sık duyduğum birkaç yanlış bilginin doğrularını yazayım:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Daemon thread kendisini yaratan thread sonlandığında değil, 
tüm user thread’ler sonlandığında JVM ile birlikte sonlanır.&lt;/li&gt;
  &lt;li&gt;JVM sonlandıktan sonra hiçbir thread hayatta kalmaz. 
JVM bir process’dir ve onu öldürdüğünüz zaman thread’ler, heap, 
stack, database bağlantıları, network bağlantıları, açılmış dosyalara 
olan referanslar gibi birçok şey de yok olur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Şimdi çok küçük bir örnek kod paylaşayım ve nasıl çalıştığını görelim.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.serdarkuzucu.daemonthreads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserVsDaemonThreads&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG_FORMAT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%7s : %s\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOG_FORMAT_ITERATION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%7s : %d : %s\n&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THREAD_MAIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MAIN&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THREAD_USER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;USER&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THREAD_DAEMON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DAEMON&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THREAD_MAIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;thread is started&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;daemonThread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SleepIteratingRunnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;THREAD_DAEMON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;daemonThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDaemon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;daemonThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userThread&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SleepIteratingRunnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;THREAD_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;userThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDaemon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;userThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;THREAD_MAIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;thread is finished&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SleepIteratingRunnable&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;SleepIteratingRunnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;threadName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT_ITERATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sleeping.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;nc&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT_ITERATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Woke up.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT_ITERATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;InterruptedException caught.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT_ITERATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Finally executed.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;currentIteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LOG_FORMAT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threadName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;While loop finished&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Örnek kod, istenilen sayıda iterasyon yapan ve her iterasyonda konsola 
çeşitli bilgiler bırakıp 250 milisaniye uyuyan &lt;code&gt;SleepIteratingRunnable&lt;/code&gt; 
isimli &lt;code&gt;Runnable&lt;/code&gt; sınıfını kullanıyor. 
Bu sınıfın içerisinde özellikle run methodunun sonuna, catch ve finally bloklarının 
içlerine konsol loglaması yaptım ki hangi Thread hangi aşamada öldü görebilelim.&lt;/p&gt;

&lt;p&gt;Tüm kod &lt;code&gt;public static void main&lt;/code&gt; methodunu içeren bir dosyada bulunuyor. 
main method içeren bir java programı çalıştırıldığında önce bir main thread yaratılır 
ve kodumuz main thread içinde koşmaya başlar. main thread de bir user thread’dir.&lt;/p&gt;

&lt;p&gt;Yukarıdaki kodun 14, 15 ve 16. satırlarında bir adet daemon thread yaratıyoruz 
ve ona verdiğimiz &lt;code&gt;SleepIteratingRunnable&lt;/code&gt;‘a 20 iterasyon yapmasını söylüyoruz.&lt;/p&gt;

&lt;p&gt;18, 19 ve 20. satırlarda ise bir adet user thread yaratıyoruz 
ve bu thread’de çalışan &lt;code&gt;SleepIteratingRunnable&lt;/code&gt;‘a 5 iterasyon yapmasını söylüyoruz.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;satırda ise main thread’i 1 saniye sleep ediyoruz.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bu noktadan sonra olacaklar şu şekilde:&lt;/p&gt;

&lt;p&gt;main thread 1 saniye sonra uykudan uyanır ve “thread is finished” yazıp sonlanır.&lt;/p&gt;

&lt;p&gt;Bu 1 saniyelik süre içerisinde yarattığımız user thread ve daemon thread bir miktar 
iterasyon yapacaklar. (3 veya 4 iterasyon)&lt;/p&gt;

&lt;p&gt;5 iterasyon ile sınırladığımız user thread 5. iterasyondan sonra sonlanır.&lt;/p&gt;

&lt;p&gt;20 iterasyon ile sınırladığımız daemon thread’in işini tamamlamasını beklemeden JVM sonlanır. 
JVM burada finally, interrupt, catch gibi aksiyonlara hiç girmeden daemon thread’i de 
kendisiyle birlikte sonlandırır.&lt;/p&gt;

&lt;p&gt;Programın çıktısı şu şekilde:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   MAIN : thread is started
 DAEMON : 1 : Sleeping.
   USER : 1 : Sleeping.
 DAEMON : 1 : Woke up.
 DAEMON : 1 : Finally executed.
 DAEMON : 2 : Sleeping.
   USER : 1 : Woke up.
   USER : 1 : Finally executed.
   USER : 2 : Sleeping.
 DAEMON : 2 : Woke up.
 DAEMON : 2 : Finally executed.
 DAEMON : 3 : Sleeping.
   USER : 2 : Woke up.
   USER : 2 : Finally executed.
   USER : 3 : Sleeping.
 DAEMON : 3 : Woke up.
 DAEMON : 3 : Finally executed.
 DAEMON : 4 : Sleeping.
   USER : 3 : Woke up.
   USER : 3 : Finally executed.
   USER : 4 : Sleeping.
   MAIN : thread is finished
 DAEMON : 4 : Woke up.
 DAEMON : 4 : Finally executed.
 DAEMON : 5 : Sleeping.
   USER : 4 : Woke up.
   USER : 4 : Finally executed.
   USER : 5 : Sleeping.
 DAEMON : 5 : Woke up.
 DAEMON : 5 : Finally executed.
 DAEMON : 6 : Sleeping.
   USER : 5 : Woke up.
   USER : 5 : Finally executed.
   USER : While loop finished
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Çıktıda gördüğümüz gibi daemon thread’in yaptığı son iş uykuya dalmak oldu. 
JVM onu uykudan uyandırmadı, interrupt etmedi veya bir şekilde finally bloğuna düşürmedi. 
User thread sonlandığında doğrudan aşağı indirdi.&lt;/p&gt;

&lt;p&gt;Bu gecelik bu kadar dostlar. Artık uyumalıyım.&lt;/p&gt;

&lt;p&gt;İyi geceler.&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Feb 2019 23:37:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/user-threads-vs-daemon-threads/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/user-threads-vs-daemon-threads/</guid>
        
        
        <category>Java</category>
        
        <category>Programlama</category>
        
      </item>
    
      <item>
        <title>Bootstrap 4 - Grid Sistemi</title>
        <description>&lt;p&gt;Çoğunlukla yazılımcılar için ön yüz geliştirmek bir baş belası haline gelir. 
Asıl işimiz bu olmadığı için bir türlü derinlemesine öğrenmeyiz.&lt;/p&gt;

&lt;p&gt;Eğer üzerinde çalışmakta olduğumuz proje geniş bir kitleye hitap etmiyorsa, arayüzünün başkalarından farklı ve daha şık 
olmaya ihtiyacı yoksa, önemli olan kullanılabilirlikse; ben genellikle &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; üzerine 
geliştirilmiş ücretsiz bir tema bulup özelliklerimizi onun üzerine entegre ediyorum. Böylece ön yüz geliştirmedeki 
zamandan ettiğimiz tasarruf ile daha sağlam bir backend geliştirebiliyoruz.&lt;/p&gt;

&lt;!--more--&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;

  &lt;p&gt;Ücretsiz Bootstrap temalarına &lt;a href=&quot;https://startbootstrap.com/themes/&quot;&gt;buraya&lt;/a&gt; 
veya &lt;a href=&quot;https://bootstrapmade.com/&quot;&gt;buraya&lt;/a&gt; tıklayarak göz atabilirsiniz.&lt;/p&gt;

  &lt;p&gt;Ücretli tasarımları incelemek isterseniz &lt;a href=&quot;https://wrapbootstrap.com/themes&quot;&gt;buraya tıklayın&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Bootstrap kütüphanesini web sayfanıza eklediğiniz anda bazı özellikler siz kullanmasanız bile çalışıyor. 
Bu özellikler Bootstrap’in sitesinde &lt;a href=&quot;https://getbootstrap.com/docs/4.2/content/reboot/&quot;&gt;Content&lt;/a&gt; başlığı altında anlatılmış. 
Bunu yapmasının amacı siz web sitenizde hiçbir CSS kodu yazmasanız bile kullandığınız HMTL taglerinin farklı tarayıcı 
ve işletim sistemlerinde aynı görüntüyü vermesini sağlamaktır. 
Örneğin siz bir &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;&lt;/code&gt; tagi kullandığınız zaman Bootstrap kullanmazsanız bu bütün tarayıcılarda farklı görünecektir. 
Bunu sağlamak için eskiden &lt;a href=&quot;https://meyerweb.com/eric/tools/css/reset/&quot;&gt;Eric Mayer’in CSS Reset&lt;/a&gt; yöntemini kullanırdık. 
Artık Bootstrap kullanarak da default HTML stilini tüm tarayıcılarda aynı görünecek şekilde konfigüre edebiliyoruz.&lt;/p&gt;

&lt;p&gt;CSS reset dışında kullanabileceğiniz birçok güzel özellik ile donatılmış Bootstrap kütüphanesini bu blogun arayüzünü 
geliştirirken bolca kullandım. Bu yazıda Bootstrap kütüphanesinde kullanmaktan en çok zevk aldığım özellik olan 
&lt;a href=&quot;https://getbootstrap.com/docs/4.2/layout/grid/&quot;&gt;Grid yapısını&lt;/a&gt; ele alacağım.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h5&gt;Grid system&lt;/h5&gt;
  &lt;p&gt;Use our powerful mobile-first flexbox grid to build layouts of all shapes and sizes thanks to a
twelve column system, five default responsive tiers, Sass variables and mixins, and dozens of predefined classes.&lt;/p&gt;
  &lt;footer class=&quot;blockquote-footer&quot;&gt;
  &lt;cite title=&quot;Bootstrap Grid System&quot;&gt;
    &lt;a href=&quot;https://getbootstrap.com/docs/4.2/layout/grid/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Bootstrap Grid System&lt;/a&gt;
  &lt;/cite&gt;
&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Grid yapısında en beğendiğim özelliklerden birisi mobile-first mottosuyla geliştirilmiş olması ve bize 5 adet 
responsive kırılım sunması. Bu kırılımların 4 tanesinin kendi isimleri varken, en küçük ekranlar için kullanacağımız 
kırılımın bir ismi bulunmamakta. Yani herhangi bir kırılımı ismiyle çağırmadığımız sürece en küçük ekranlar için 
tasarlıyoruz diye düşüneceğiz. En küçük ekran için tasarımı belirledikten sonra eğer sitemiz daha büyük ekranlarda 
farklı görünsün istiyorsak, tek tek bu kırılımları belirteceğiz. Öncelikle bu 5 kırılımı ve kısaltmalarını şöyle 
bir tanıyalım:&lt;/p&gt;

&lt;table class=&quot;table table-bordered&quot;&gt;
&lt;thead class=&quot;thead-dark&quot;&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Extra Small&lt;/th&gt;
&lt;th&gt;Small&lt;/th&gt;
&lt;th&gt;Medium&lt;/th&gt;
&lt;th&gt;Large&lt;/th&gt;
&lt;th&gt;Extra Large&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&quot;table-dark&quot;&gt;Kısaltma&lt;/th&gt;
&lt;td&gt;Yok&lt;/td&gt;
&lt;td&gt;sm&lt;/td&gt;
&lt;td&gt;md&lt;/td&gt;
&lt;td&gt;lg&lt;/td&gt;
&lt;td&gt;xl&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th class=&quot;table-dark&quot;&gt;Ekran Genişliği&lt;/th&gt;
&lt;td&gt;&amp;lt;576px&lt;/td&gt;
&lt;td&gt;≥576px&lt;/td&gt;
&lt;td&gt;≥768px&lt;/td&gt;
&lt;td&gt;≥992px&lt;/td&gt;
&lt;td&gt;≥1200px&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;th class=&quot;table-dark&quot;&gt;.container Genişliği&lt;/th&gt;
&lt;td&gt;%100 (auto)&lt;/td&gt;
&lt;td&gt;540px&lt;/td&gt;
&lt;td&gt;720px&lt;/td&gt;
&lt;td&gt;960px&lt;/td&gt;
&lt;td&gt;1140px&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;container-nedir&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.container&lt;/code&gt; Nedir?&lt;/h3&gt;

&lt;p&gt;Eğer sitemizin yatay olarak tüm ekrana yayılmasını istemiyorsak tüm HTML kodumuzu 
aşağıdaki gibi &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; özelliği &lt;code class=&quot;highlighter-rouge&quot;&gt;container&lt;/code&gt; olan bir &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;‘in içine alabiliriz.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    Geri kalan her şey buraya 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Container içeriğin sayfanın ortasında olmasını sağlar ve genişliğini sınırlar. 
Yukarıdaki tabloda farklı ekran genişliklerinde container boyutunun ne kadar olduğunu görebilirsiniz. 
Örneğin, 576 pikselden küçük ekranlarda container ekranın tamamını kaplarken, 
genişliği 576 piksel ile 768 piksel arasındaki bir ekranda container 540 piksel alan 
kaplayıp sayfanın tam ortasında yer alacaktır.&lt;/p&gt;

&lt;p&gt;Eğer içerik her zaman sayfanın tüm genişliğini kapsasın istiyorsanız, &lt;code class=&quot;highlighter-rouge&quot;&gt;container&lt;/code&gt; yerine 
&lt;code class=&quot;highlighter-rouge&quot;&gt;container-fluid&lt;/code&gt; sınıfını kullanmanız yeterli.&lt;/p&gt;

&lt;h3 id=&quot;satır-ve-sütunlar&quot;&gt;Satır ve Sütunlar&lt;/h3&gt;

&lt;p&gt;Grid system satır ve sütunlardan oluşur.&lt;/p&gt;

&lt;p&gt;Satırlar &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; sınıfı ile oluşturulur ve sayfada alt alta görünürler. 
Sütunlar dışında içerik barındırmamalıdır.&lt;/p&gt;

&lt;p&gt;Satırların içerisine doğrudan sütunlar gelir. 
Sütunlar responsive kullanım tarzınıza bağlı olarak yan yana veya alt alta gelebilirler. 
Sütun oluşturmak için &lt;code class=&quot;highlighter-rouge&quot;&gt;col&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;col-{boyut}&lt;/code&gt; veya &lt;code class=&quot;highlighter-rouge&quot;&gt;col-{kırılım}-{boyut}&lt;/code&gt; sınıflarını kullanırız.&lt;/p&gt;

&lt;p&gt;Bootstrap grid sistemini kullandığınız alanı 12 eşit parçaya böler. 
Bu parçaları birleştirerek kullanarak sütunlarımızın genişliklerini belirleriz. 
Satırdaki sütunlarımızın genişliklerinin toplamı 12 olursa satırda boş alan bırakmamış oluruz.&lt;/p&gt;

&lt;p&gt;Örneğin satırımızın solunda 4 parça genişliğinde bir sütun olsun 
ve sağında da 8 parça genişliğinde bir sütun olsun istersek aşağıdaki gibi yazabiliriz:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu şekilde yazdığımızda en küçük ekrandan en büyük ekrana kadar tüm ekranlarda sayfanın 
genişliğinin 4/12 kadarı sol tarafına, 8/12 kadarı sağ tarafına ayrılır.&lt;/p&gt;

&lt;p&gt;Eğer extra small ve small ekranlarda sütunlar alt alta görünsün ve 100% genişlikte olsun, 
medium ekranlardan itibaren 4 ve 8 parça boyutlarında yan yana olsun istiyorsak, 
sütunları boyutlarını belirterek aşağıdaki gibi ayırabiliriz:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tüm sütunlar eşit genişlikte olsun istiyorsak, güzel haber, 
sütunların boyutlarını belirtmek zorunda değiliz. Aşağıdaki gibi yazabiliriz:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Yan yana eşit genişlikte iki sütun --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Yan yana eşit genişlikte üç sütun --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Orta&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yine tüm sütunlar eşit genişlikte olsun fakat sadece medium ve daha büyük ekranlarda böyle olsun istiyorsanız, 
aşağıdaki gibi sütunları kırılım belirterek yazabilirsiniz. 
Bu sayede medium boyutundan daha küçük ekranlarda sütunlar alt alta gözükürler.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Medium ve daha geniş ekranlarda yan yana eşit genişlikte iki sütun --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Small ve Extra Small ekranlarda alt alta iki div --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Medium ve daha geniş ekranlarda yan yana eşit genişlikte üç sütun --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Small ve Extra Small ekranlarda alt alta üç div --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Orta&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-md&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Farklı kırılımları bir arada kullanabiliyoruz. 
Sütunumuzun her ekran boyutunda farklı bir genişliğe sahip olmasını sağlayabiliriz. 
Aşağıdaki örnekte soldaki sütun her ekran boyutunda farklı genişlikte olacak 
ve sağdaki sütun da satırda geri kalan alanı dolduracak şekilde konumlandırıldı.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Her çözünürlükte farklı bir genişlik tayin edildi --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Ekstra Small: 5 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Small: 4 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Medium: 3 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Large: 2 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Ekstra Large: 1 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-5 col-sm-4 col-md-3 col-lg-2 col-xl-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Satırda geri kalan boş alanın tamamını kaplar --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sadece bir sütunun genişliğini belirtip gerisine sadece &lt;code class=&quot;highlighter-rouge&quot;&gt;col&lt;/code&gt; sınıfını verirsek, 
genişliği belirtilmemiş olan sütunlar kendilerine kalan alanı eşit ölçülerde paylaşırlar.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Extra small &amp;amp; small: (12 - 6) / 2 = 3 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Medium &amp;amp; large &amp;amp; extra large: (12 - 8) / 2 = 2 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Extra small &amp;amp; small: 6 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Medium &amp;amp; large &amp;amp; extra large: 8 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-6 col-md-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Orta&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Extra small &amp;amp; small: (12 - 6) / 2 = 3 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Medium &amp;amp; large &amp;amp; extra large: (12 - 8) / 2 = 2 parça --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Eğer bir sütunun genişliğine sütunun içeriği karar versin istiyorsak, 
&lt;code class=&quot;highlighter-rouge&quot;&gt;col-auto&lt;/code&gt; veya &lt;code class=&quot;highlighter-rouge&quot;&gt;col-{kırılım}-auto&lt;/code&gt; sınıfını kullanabiliriz. 
Örneğin 200 pixel genişliğinde bir içeriği tutan sütuna &lt;code class=&quot;highlighter-rouge&quot;&gt;col-auto&lt;/code&gt; sınıfını verirsek 
bu sütun 200 pixel genişliğinde olur. 
Aynı satırda &lt;code class=&quot;highlighter-rouge&quot;&gt;col&lt;/code&gt; sınıfına sahip bir sütun varsa o sütun da geri kalan tüm alanı doldurur.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Solda içeriğinin genişliği (200px) kadar yer kaplayan sütun --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width:200px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sol&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Ortada 2 parça genişliğinde sütun --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Orta&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Sağda kalan alanın tamamını kaplayan sütun --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Sağ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bitirirken&quot;&gt;Bitirirken&lt;/h3&gt;

&lt;p&gt;Bootstrap’in grid sistemi ile ilgili önemli gördüğüm birçok noktaya parmak bastığımı düşünüyorum. 
Bootstrap birçok faydalı bileşen barındıran büyük bir kütüphane. 
Birçok bileşenini kullanmasanız da sadece grid sistemi için bile kullanılabilir.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Feb 2019 18:03:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/bootstrap-4-grid-system/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/bootstrap-4-grid-system/</guid>
        
        
        <category>Bootstrap</category>
        
        <category>Frontend</category>
        
        <category>HTML</category>
        
      </item>
    
      <item>
        <title>Docker ile WordPress Kurulumu ve Https</title>
        <description>&lt;p&gt;Yakın zamanda blogumda bir takım radikal değişiklikler yaptım. 
Bunlardan en önemlisi wordpress altyapısına geçmem oldu. 
Yaklaşık 12-13 yıldır kullandığım Blogger hizmetinden ayrılmanın burukluğu ile bu kadar özgür olduğum bir 
platformda blog yazmanın sevinci birbirine karıştı. 
Hem wordpress ile yazı yazmaya elim alışsın hem de wordpress’e geçiş tecrübelerimi paylaşayım amacıyla 
bu yazıyı yazıyorum.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;1-giriş&quot;&gt;1. Giriş&lt;/h2&gt;

&lt;p&gt;Blogumu wordpress altyapısına taşırken, elimdeki sunucuyu her an değiştirme gereksinimi duyabilme ihtimalimi 
ve bu değişikliği en iyi nasıl yönetirim sorusunu ön planda tuttum. 
Bu problemi çözebilmek için elimdeki sunucuya minimum bağımlılığımın bulunması gerekiyordu. 
İhtiyacım olan her yazılımı ve konfigürasyonu doğrudan sunucuya kurarsam taşınmam gerektiğinde neyin nerede olduğunu 
hatırlamam ve bir sürü şeyi tekrar yapmam gerekir. Aynı zamanda farklı farklı yazılımlar aynı ortama kurulduğunda 
birbirlerini konfigüratif olarak etkileyebilirler. Kurduğumuz her yazılım da kapatmamız gereken fakat güvenlik uzmanı 
olmadığımız için varlığından haberimiz olmayacak güvenlik zafiyetleri getirebilecektir.&lt;/p&gt;

&lt;p&gt;Bu sebeplerden dolayı sunucuya sadece docker yükleme ve gereken diğer tüm yazılımları kendine has docker container’lar 
üzerinde çalıştırma çözümü üzerinde kendimle mutabık oldum. 
Aşağıdaki PowerPoint ile çizilmiş resimde tasarladığım mimariyi görselleştirdim.&lt;/p&gt;

&lt;h2 id=&quot;2-mimari&quot;&gt;2. Mimari&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/wp-docker-blog-architecture.png&quot; alt=&quot;Mimari&quot; title=&quot;Mimari&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bu mimarinin bileşenleri şu şekilde:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker:&lt;/strong&gt; Tüm sistemi ayakta tutan platform. Docker üzerinde çalıştırdığımız her bir container ana makinadan izole 
sanal bir makina gibidir fakat bir sanal makinadan çok daha hafif ve temizdir. Docker ile ilgili daha fazla bilgi 
edinmek için resmi sitesine &lt;a href=&quot;https://docs.docker.com&quot;&gt;buraya tıklayarak&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker Compose:&lt;/strong&gt; Birden fazla docker container’ını bir arada tanımlamamıza, konfigüre etmemize ve aynı anda 
başlatıp kapatabilmemizi sağlayan araç.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nginx:&lt;/strong&gt; İnternet üzerinden sunucumuzdaki 80 (http) ve 443 (https) portlarına gelen trafiği karşılayıp, 
wordpress container’ındaki 80 portuna reverse-proxy yöntemiyle iletecek olan web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;letsencrypt:&lt;/strong&gt; HTTPS protokolü kullanmak istiyorsanız ve sertifikaya para vermek istemiyorsanız; ücretsiz ve 
güvenli bir SSL sertifikası oluşturabilmenizi sağlayan kuruluş. 
İncelemek isterseniz &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;buraya tıklayabilirsiniz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apache:&lt;/strong&gt; Wordpress kurulumunu çalıştıracak olan web server.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mysql:&lt;/strong&gt; Wordpress’in ihtiyaç duyduğu veritabanı.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;wordpress:&lt;/strong&gt; Açık kaynak kodlu, PHP diliyle geliştirilmiş, özelleştirmeye açık meşhur blog 
ve içerik yönetim sistemimiz.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-hazırlık&quot;&gt;3. Hazırlık&lt;/h2&gt;

&lt;h3 id=&quot;31-sunucunun-alınması&quot;&gt;3.1. Sunucunun Alınması&lt;/h3&gt;

&lt;p&gt;Yazıyı daha az hatayla yazabilmek için &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt; üzerinden ucuz bir makina aldım.&lt;/p&gt;

&lt;p&gt;İşletim sistemi olarak CentOS 7.5 seçtim.&lt;/p&gt;

&lt;p&gt;DigitalOcean yeni sunucuma IP adresi olarak 188.166.59.76 atadı. 
Sunucunuzun IP adresini kaybetmeyin, sık sık lazım olacaktır. 
Kişisel bilgisayarımızda kullandığımız işletim sistemine göre kendimize bir SSH programı buluyoruz 
ve sunucumuza ssh ile giriş yapıyoruz.&lt;/p&gt;

&lt;p&gt;Örneğin ben linux kullandığım için doğrudan terminalden aşağıdaki şekilde sunucuma ulaşabildim:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh root@188.166.59.76
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;32-dns-yönlendirmesi&quot;&gt;3.2. DNS Yönlendirmesi&lt;/h3&gt;

&lt;p&gt;Kullanacağımız domain için, domain’imizi satın aldığımız şirketin arayüzünden DNS ayarlarımızı güncelliyoruz 
ve yeni almış olduğumuz IP adresimiz için bir adet 
&lt;a href=&quot;https://support.dnsimple.com/articles/a-record/#whats-an-a-record&quot;&gt;A kaydı&lt;/a&gt; oluşturuyoruz. 
&lt;strong&gt;A kaydı&lt;/strong&gt; spesifik bir domain adresine gelen bir isteğin belirli bir IP adresine iletilmesini sağlar. 
Ben de &lt;strong&gt;demoblog.serdarkuzucu.com&lt;/strong&gt; alt alan adını &lt;strong&gt;188.166.59.76&lt;/strong&gt; IP adresine yönlendiren A kaydını oluşturdum.&lt;/p&gt;

&lt;h3 id=&quot;33-docker-ve-docker-compose-kurulumu&quot;&gt;3.3. Docker ve Docker Compose Kurulumu&lt;/h3&gt;

&lt;p&gt;Tüm sistemin çalışabilmesi için sunucumuza kurmamız gereken yegane araçlar docker ve docker-compose. 
Aşağıya adımları yazıyorum fakat ilerleyen zamanlarda docker kurulumunda değişiklikler yapılır ihtimaline karşı 
dökümantasyon linklerini de ekliyorum:
&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/&quot;&gt;docker&lt;/a&gt;,
&lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;docker-compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aşağıdaki komut ile önce docker kurmak için gereken diğer araçları kuruyoruz:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; yum-utils &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  device-mapper-persistent-data &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  lvm2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aşağıdaki komut ile docker yazılımının indirileceği repository’yi sistemimize tanıtıyoruz:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum-config-manager &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--add-repo&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    https://download.docker.com/linux/centos/docker-ce.repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ve aşağıdaki komut ile docker sunucumuza kuruluyor:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Docker kuruldu fakat henüz ayakta değil. Ayağa kaldırmak için şu komutu çalıştırıyoruz:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Aşağıdaki komut da sunucu yeniden başladığında docker da otomatik olarak ayağa kalksın amacıyla kullanılıyor. 
Bunu da çalıştıralım.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Şimdi sıra docker-compose kurmaya geldi. Aşağıdaki komut ile başlıyoruz:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;curl &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/docker/compose/releases/download/1.23.2/docker-compose-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Daha sonra indirdiğimiz dosyaya aşağıdaki komutla gerekli yetkileri veriyoruz:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu yazıda anlattığım mimari docker swarm modunda çalışmaktadır. 
Bu sebeple aşağıdaki komutu çalıştırarak docker kurulumunu swarm moduna geçirmemiz gerekiyor. 
Komuttaki IP adresine sunucumuzun IP adresini yazmayı unutmayalım.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker swarm init &lt;span class=&quot;nt&quot;&gt;--advertise-addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;188.166.59.76
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;34-data-dizinlerinin-oluşturulması&quot;&gt;3.4. Data Dizinlerinin Oluşturulması&lt;/h3&gt;

&lt;p&gt;Docker container’lar host makinadan izole şekilde çalışır. 
Her container datasını kendine özel volume adı verilen alanlarda tutar. 
Bu sebeple bir docker container silinirse veri kaybına uğrayabiliriz. 
Bunu engellemek için container oluştururken container’ların içinde önemli verilerin tutulduğu dizinleri 
host makinadaki uygun bir dizin ile eşleştiriyoruz. 
Böylece container silinip tekrar aynı dizini görecek şekilde yeni container oluşturulursa veriler korunmuş olur. 
Aynı zamanda yerini iyi bildiğimiz bu dizinleri başka bir sunucuya geçmek istediğimizde sıkıştırıp 
kolayca taşıyabiliriz.&lt;/p&gt;

&lt;p&gt;Bu mimaride 3 adet container kullanacağız. 
Tüm data bir arada bulunsun amacıyla sunucunun root dizininde &lt;code class=&quot;highlighter-rouge&quot;&gt;/docker-storage&lt;/code&gt; isminde bir dizin oluşturacağım 
ve her container için bu dizinin altında ekstra dizinler açacağım. 
Dikkatinizi çekerim, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-storage&lt;/code&gt; özel bir isim değil, ben uydurdum. 
Siz başka bir dizin de kullanabilirsiniz.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /docker-storage/nginx
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /docker-storage/wordpress
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /docker-storage/mysql
&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 777 /docker-storage
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dizin yetkilendirmesi için 777 kötü bir parametre fakat sistem uzmanı olmadığımdan dolayı 
kurulum kolaylığı için şimdilik görmezden gelelim.&lt;/p&gt;

&lt;h2 id=&quot;4-mimarinin-yaml-formatında-hazırlanışı&quot;&gt;4. Mimarinin YAML Formatında Hazırlanışı&lt;/h2&gt;

&lt;p&gt;Yavaş yavaş sunucumuzu ısıtmaya başlıyoruz. 
Öncelikle sunucumuzun uygun bir dizininde &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; dosyasını barındıracak olan bir dizin yaratıyoruz. 
Ben root user ile girdiğim için home dizinim &lt;code class=&quot;highlighter-rouge&quot;&gt;/root&lt;/code&gt; olarak tayin edilmiş. 
Bu dizine gidiyor ve &lt;code class=&quot;highlighter-rouge&quot;&gt;demoblog&lt;/code&gt; isminde bir dizin oluşturuyorum ve içerisinde &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; isminde 
bir boş dosya yaratıyorum.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; /root/demoblog
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/demoblog
&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Daha sonra favori text editörümüz ile (nano, vi, vs) &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; dosyasını açıp aşağıdaki içeriği yapıştıralım.&lt;/p&gt;

&lt;p&gt;Bu dosyanın sizin için çalışır hale gelmesi için sadece &lt;code class=&quot;highlighter-rouge&quot;&gt;EMAIL=demoblog@serdarkuzucu.com&lt;/code&gt; 
ve &lt;code class=&quot;highlighter-rouge&quot;&gt;URL=demoblog.serdarkuzucu.com&lt;/code&gt; alanlarını değiştirmeniz yeterli olacaktır.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.6&quot;&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql:5.7&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bind&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/docker-storage/mysql&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/lib/mysql&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;43C61277714C73D141646AEB5F134B51&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;43C61277714C73D141646AEB5F134B51&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;blognet&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;wordpress&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bind&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/docker-storage/wordpress&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/www/html&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db:3306&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;43C61277714C73D141646AEB5F134B51&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;blognet&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;linuxserver/letsencrypt&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;80:80&quot;&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;443:443&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;blognet&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PGID=1001&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PUID=1001&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;EMAIL=demoblog@serdarkuzucu.com&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;URL=demoblog.serdarkuzucu.com&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;VALIDATION=http&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TZ=Europe/Istanbul&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bind&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/docker-storage/nginx&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/config&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cap_add&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NET_ADMIN&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;blognet&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;overlay&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-i̇lk-çalıştırma&quot;&gt;5. İlk Çalıştırma&lt;/h2&gt;

&lt;p&gt;Gerekli docker imajlarının docker-hub’dan indirilmesi ve sistemin ilk çalışması için &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; 
dosyasının bulunduğu dizine gidip &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up&lt;/code&gt; komutunu çalıştırıyoruz:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/demoblog
docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Önce aşağıdakine benzer loglar göreceksiniz konsolda. 
Bu loglar ilgili imajların sunucunuza download edilmesi ve container’ların yaratılmasını gösteriyor:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WARNING: The Docker Engine you're using is running in swarm mode.

Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.

To deploy your application across the swarm, use `docker stack deploy`.

Creating network &quot;demoblog_blognet&quot; with driver &quot;overlay&quot;
Pulling db (mysql:5.7)...
5.7: Pulling from library/mysql
5e6ec7f28fb7: Pull complete
4140e62498e1: Pull complete
e7bc612618a0: Pull complete
1af808cf1124: Pull complete
ff72a74ebb66: Pull complete
3a28cb03e3dc: Pull complete
2b52dda3bd7d: Pull complete
dd1e5bc08c44: Pull complete
2cbf322d346d: Pull complete
7193a395fe03: Pull complete
d177f9940737: Pull complete
Pulling wordpress (wordpress:latest)...
latest: Pulling from library/wordpress
5e6ec7f28fb7: Already exists
cf165947b5b7: Pull complete
7bd37682846d: Pull complete
99daf8e838e1: Pull complete
ae320713efba: Pull complete
ebcb99c48d8c: Pull complete
9867e71b4ab6: Pull complete
936eb418164a: Pull complete
5d9617dfb66b: Pull complete
8dd7afaae109: Pull complete
8f207844da7e: Pull complete
adb3ae5e4987: Pull complete
44d7d07029db: Pull complete
fb91064652b0: Pull complete
82c9b5a8edaa: Pull complete
e4dd0c780baf: Pull complete
7fffc6e7f6c5: Pull complete
f0ae5fa697b5: Pull complete
97328ab7f1f4: Pull complete
Pulling nginx (linuxserver/letsencrypt:)...
latest: Pulling from linuxserver/letsencrypt
238a51429c53: Pull complete
0683a10793b6: Pull complete
de3626289736: Pull complete
95c6c6a9162f: Pull complete
d406f0fb0060: Pull complete
acf94a921b10: Pull complete
66ea58380f91: Pull complete
Creating demoblog_db_1    ... done
Creating demoblog_nginx_1     ... done
Creating demoblog_wordpress_1 ... done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Daha sonra container’ların logları görülecek. 
5-6 dakika gibi uzunca bir süre beklemeniz gerekebilir çünkü nginx container’ının letsencrypt.org’dan 
sertifika oluşturması biraz zaman alıyor.&lt;/p&gt;

&lt;p&gt;Tüm container’lar ayağa kalktığında en son şu logu göreceksiniz:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nginx_1      | [services.d] done.
nginx_1      | Server ready
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu aşamadan sonra tarayıcımızda blog adresimize https şemasıyla gidersek aşağıdaki gibi bir sayfa göreceğiz:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/nginx-is-up-https.png&quot; alt=&quot;nginx is up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adres çubuğundaki yeşil kilit simgesi ne de güzel parlıyor değil mi? 
Bu letsencrypt üzerinden aldığımız sertifikanın başarıyla alan adımıza kurulduğunu gösteriyor.&lt;/p&gt;

&lt;p&gt;Peki şimdiye kadar ne elde ettik? Bir bakalım:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Geçerli bir ssl sertifikası ile https üzerinden iletişim kurabildiğimiz bir nginx sunucumuz var 
fakat wordpress ile iletişim halinde değil.&lt;/li&gt;
  &lt;li&gt;Eğer https yerine http ile blogumuza erişmek istersek nginx’in http portunu dinlemediğini göreceğiz. 
Bu da adresinizi ezbere bilen okuyucularınızın yanlışlıkla http adrese girdiklerinde blogunuza 
ulaşamamasına sebep olacaktır.&lt;/li&gt;
  &lt;li&gt;Bir wordpress/apache kurulumumuz var fakat dışarıya açmadığımız için tarayıcımızdan erişemiyoruz.&lt;/li&gt;
  &lt;li&gt;Wordpress tarafından okunabilen bir mysql sunucumuz var, bunu da dışarıya açmadığımız için 
kendi hallerinde takılıyorlar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yazının devamında bu eksiklikleri gidereceğiz.&lt;/p&gt;

&lt;h2 id=&quot;6-reverse-proxy-ve-http-https-yönlendirme&quot;&gt;6. Reverse Proxy ve Http-&amp;gt;Https Yönlendirme&lt;/h2&gt;

&lt;p&gt;Öncelikle yukarıdaki adımlarda geldiğimiz son noktada &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up&lt;/code&gt; demiştik 
ve terminalimizde hala bu işlem açık durumda bekliyor. Klavyemizdeki &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL + C&lt;/code&gt; tuşlarına birlikte 
basarak bu işlemi sonlandırıyoruz. 
Böylece açık olan uygulamalarımız da kapanmış oluyor.&lt;/p&gt;

&lt;p&gt;Öncelikle Wordpress’in https reverse-proxy üzerinden gelen isteklerde sapıtmaması için &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt; dosyasında 
aşağıdaki satırları buluyoruz. &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt; dosyası şurada: &lt;code class=&quot;highlighter-rouge&quot;&gt;/docker-storage/wordpress/wp-config.php&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cd&quot;&gt;/** Sets up WordPress vars and included files. */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;require_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ABSPATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wp-settings.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bulduğumuz bu satırların hemen &lt;strong&gt;üzerine&lt;/strong&gt; aşağıdaki kodu yapıştırıyoruz. Aman URL’leri değiştirmeyi unutmayın.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Begin: Modified by hand for https reverse-proxy&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_PROTO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTPS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'on'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_FOR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;explode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_FOR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$_SERVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'REMOTE_ADDR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'WP_HOME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://demoblog.serdarkuzucu.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'WP_SITEURL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://demoblog.serdarkuzucu.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'FORCE_SSL_ADMIN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# End: Modified&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wp-config.php&lt;/code&gt; dosyasıyla işimiz bu kadar. Kaydedip dosyayı kapatabilirsiniz.&lt;/p&gt;

&lt;p&gt;Şimdi sıra nginx konfigürasyonunu düzeltmeye geldi. 
Şu dosyayı favori text editörümüzle açalım: &lt;code class=&quot;highlighter-rouge&quot;&gt;/docker-storage/nginx/nginx/site-confs/default&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;İçindeki her şeyi silip aşağıdaki kodu yapıştıralım. 
Adresleri yine değiştirmeyi unutmayın aman diyeyim.&lt;/p&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Redirect all http:80 requests to https!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;[::]:80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host$request_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Default Server will redirect us to demoblog.serdarkuzucu.com&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# all ssl related config moved to ssl.conf&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/config/nginx/ssl.conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://demoblog.serdarkuzucu.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Blog Reverse Proxy&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;demoblog.serdarkuzucu.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# all ssl related config moved to ssl.conf&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/config/nginx/ssl.conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kn&quot;&gt;client_max_body_size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Real-IP&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$remote_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Forwarded-For&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://wordpress:80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu dosyayı da kaydedip kapatalım. Şimdi sistemi ayağa kaldırma vakti. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; dosyamızı koyduğumuz yeri unutmadınız değil mi? 
O dizine &lt;code class=&quot;highlighter-rouge&quot;&gt;cd /root/demoblog&lt;/code&gt; komutuyla geri dönüyoruz ve aşağıdaki komutla sistemi başlatıyoruz. 
Bu sefer tüm logları terminalde görmeyeceğiz çünkü detached modda başlatıyoruz.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Terminalde sadece şu logları göreceğiz, sonra komut terminal oturumumuzu özgür bırakacak:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;WARNING: The Docker Engine you're using is running in swarm mode.

Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.

To deploy your application across the swarm, use `docker stack deploy`.

Starting demoblog_nginx_1 ... done
Starting demoblog_db_1    ... done
Starting demoblog_wordpress_1 ... done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bir süre container’lar açılsın diye bekledikten sonra blog adresimizi tarayıcımızda açarsak artık nginx 
hata sayfası yerine wordpress kurulum ekranının açıldığını göreceğiz.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/wp-is-up-https.png&quot; alt=&quot;Worpress is up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wordpress kurulumunda bundan sonrasını siz halledersiniz. Gerisi next, next, next :)&lt;/p&gt;

&lt;p&gt;Eğer aynı adrese http şemasıyla girersek, 
nginx’e yaptığımız konfigürasyon sayesinde sitenin https’e yönlendirdiğini görebiliriz.&lt;/p&gt;

&lt;p&gt;Biraz daha ileri gidip, &lt;code class=&quot;highlighter-rouge&quot;&gt;reboot&lt;/code&gt; komutu ile sunucuyu yeniden başlattım. 
Sunucu tekrar açıldığında tüm container’ların da açılmış olduğunu 
ve sistemin çalışır vaziyette olduğunu test etmiş oldum.&lt;/p&gt;

&lt;h2 id=&quot;7-bitirirken&quot;&gt;7. Bitirirken&lt;/h2&gt;

&lt;p&gt;Pek çok teknolojiyi detaylarına pek az hakim olarak bir arada çalıştırdık. 
Ufak tefek birkaç not düşüp konuyu artık daha fazla uzatmayacağım.&lt;/p&gt;

&lt;p&gt;Mysql container’ından hiçbir portu dışarıya açmadık. 
Bu doğrudan veritabanınıza gelebilecek saldırıları engeller.&lt;/p&gt;

&lt;p&gt;Wordpress/Apache container’ının üzerinden de hiç bir portu dışarıya açmadık. 
Böylece IP:PORT şeklinde sunucunuzdaki apache’ye doğrudan saldırganların gelmesini engellemiş olduk.&lt;/p&gt;

&lt;p&gt;Letsencrypt üzerinden oluşturulan sertifikaların geçerlilik tarihi 90 gündür. 
nginx container’ını oluştururken kullandığımız &lt;code class=&quot;highlighter-rouge&quot;&gt;linuxserver/letsencrypt&lt;/code&gt; imajını oldukça başarılı hazırlamışlar, 
sertifika bitiş tarihi gelirken otomatik olarak sertifikayı yeniliyor. 
Böylece sertifika yenileme ile de uğraşmamış oluyoruz.&lt;/p&gt;

&lt;p&gt;Sunucunuzu yeni aldığınızda root kullanıcısı dışında sudo yetkisi olan başka bir kullanıcı oluşturun 
ve mümkünse root kullanıcısını ssh ile login olmaya kapatın. 
Sunuculara yapılan otomatikleştirilmiş saldırıların çoğu root kullanıcısına gelir.&lt;/p&gt;

&lt;p&gt;Bu gecelik söyleyeceklerim veya söylemeyi planladıklarımdan hatırlayabildiklerim bu kadar. Kodlu geceler.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Feb 2019 22:42:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/docker-wordpress-https-nginx-letsencrypt/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/docker-wordpress-https-nginx-letsencrypt/</guid>
        
        
        <category>Docker</category>
        
        <category>Wordpress</category>
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>Data Abstraction Nedir, Nerede Bulunur?</title>
        <description>&lt;p&gt;Yazılım geliştirme prensiplerinin en önemlilerinden birisi olan &lt;strong&gt;abstraction&lt;/strong&gt;, 
yani soyutlama, kendi içinde iki çeşide ayrılıyor. 
Bunlar &lt;strong&gt;procedural abstraction&lt;/strong&gt; ve &lt;strong&gt;data abstraction&lt;/strong&gt;. 
Bu yazıda kısaca &lt;strong&gt;data abstraction&lt;/strong&gt;‘ın ne olduğundan bahsetmeye çalışacağım.&lt;/p&gt;

&lt;p&gt;Öncelikle &lt;strong&gt;abstraction&lt;/strong&gt; ve &lt;strong&gt;encapsulation&lt;/strong&gt; terimleri ne anlama geliyor ondan bahsetmek istiyorum 
çünkü bu terimler tanımları çok yakın olduğundan genellikle birbiri ile karıştırılıyorlar.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;Abstraction:&lt;/strong&gt; Gereksiz karmaşıklığın (complexity) gizlenerek oluşturulan bileşenlerin sadece ilgili kısımlarının 
yazılımın diğer kısımlarına sunulması işlemidir. Bu sayede bu bileşenleri kullanan diğer bileşenler alt seviyelerdeki 
kompleks işlemlerin nasıl yapıldığı ile ilgilenmek zorunda kalmaz. Java’da çoğunlukla &lt;strong&gt;interface&lt;/strong&gt;, &lt;strong&gt;abstract class&lt;/strong&gt; 
gibi konseptleri kullandığımızda bir takım detayları soyutlamış oluruz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Encapsulation:&lt;/strong&gt; Bir yazılım bileşeninin iç yapısının dış dünyadan gizlenmesidir. Böylece bu bileşenin işleyişinde 
yapılabilecek herhangi bir değişikliğin bileşeni kullanan diğer yazılım bileşenlerini etkilememesi sağlanır. 
Java’da bir sınıfta &lt;strong&gt;private method&lt;/strong&gt;, &lt;strong&gt;private field&lt;/strong&gt; gibi dışarıya kapalı tanımlar yaptığımızda sınıfımızın 
işleyişini ve iç yapısındaki verileri encapsulate etmiş oluruz. Böylece bu sınıfın işleyişine ileride müdahale 
ettiğimizde bu sınıfı kullanan diğer sınıflara dokunmak zorunda kalmayız.&lt;/p&gt;

&lt;p&gt;Abstraction, yazılımımızı farklı seviyelere (layers of abstraction) ayırmamızı sağlar. 
Örneğin, kullandığımız işletim sistemi diskten bir dosyanın nasıl okunması gerektiğini bilir ve bizden birçok 
donanım spesifik detayı gizleyerek sadece ilgili fonksiyonaliteyi soyut olarak bize sunar. 
Java, platform bağımsız bir dil olarak, işletim sistemleri ile iletişime nasıl geçilmesi gerektiği ile ilgili 
detayları bizden gizleyerek, dosya okuma/yazma gibi işlemleri daha da soyut olarak bize çeşitli sınıflar ile sağlar. 
Apache’nin açık kaynak kodlu &lt;a href=&quot;https://poi.apache.org/spreadsheet/quick-guide.html&quot;&gt;POI kütüphanesi&lt;/a&gt;, Java’nın temel dosya/okuma yazma bileşenlerini kullanarak 
excel dosya formatının nasıl okunup yazılması gerektiği ile ilgili birçok gereksiz detayı bizden saklar. Bu sayede 
bizim yazılımımız sadece excel’in satırlarına ilgili bilgileri girip dosyayı kaydet komutunu vermekten ibaret olur.&lt;/p&gt;

&lt;p&gt;Aşağıda Apache POI kütüphanesinin dökümantasyonundan &lt;a href=&quot;https://poi.apache.org/spreadsheet/quick-guide.html#CreateCells&quot;&gt;örnek bir excel yazma kodu&lt;/a&gt; göstermek istiyorum.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Workbook&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HSSFWorkbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;CreationHelper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createHelper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCreationHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Sheet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sheet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createSheet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new sheet&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a row and put some cells in it. Rows are 0 based.&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Row&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sheet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Create a cell and put a value in it.&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Cell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createCell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCellValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Or do it on one line.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createCell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCellValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createCell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCellValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createHelper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createRichTextString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This is a string&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createCell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCellValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Write the output to a file&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileOut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;workbook.xls&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;wb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileOut&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileOut&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu örnekten görüleceği gibi, bir excel dosyasının formatının nasıl olması gerektiği ile ilgili detayları 
kullandığımız kütüphane bizden soyutladı. Diske dosya nasıl yazılır detayını ise Java içerisinde bulunan 
sınıflar bu kütüphaneden soyutladı.&lt;/p&gt;

&lt;p&gt;Bu sayede yazılımda kompleks işleri bir üst seviye için kolaylaştıran &lt;strong&gt;farklı soyutlama seviyeleri&lt;/strong&gt; ortaya çıktı. 
Yazılım mimarisine eklenen her bir soyutlama seviyesi, yazılımı makine anlayacak seviyeden insan anlayacak seviyeye 
bir adım daha yaklaştırır.&lt;/p&gt;

&lt;p&gt;Bir excel dosyası tonla bilgi taşıyan zengin bir içeriğe sahiptir. &lt;code class=&quot;highlighter-rouge&quot;&gt;HSSFWorkbook&lt;/code&gt; sınıfı bu bilgilerin çoğunu 
ve nasıl manipüle edileceğine ait detayları bizden gizler, bu sayede bu kütüphanede ileriki zamanlarda 
yapılabilecek performans iyileştirmeleri yada refactoring gibi işlemlerde bizim kodumuzu güncellememiz gerekmez. 
Encapsulation da burada bu şekilde kullanıldı.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstraction&lt;/strong&gt; yazılımın tasarımı aşamasında yapılan bir çalışmadır. 
&lt;strong&gt;Encapsulation&lt;/strong&gt; ise implementasyon aşamasında yapılır.&lt;/p&gt;

&lt;h3 id=&quot;peki-data-abstraction-ne&quot;&gt;Peki Data Abstraction Ne?&lt;/h3&gt;

&lt;p&gt;Yukarıda verdiğim örnekler genellikle procedural abstraction’a örnekti. Yani bir işin nasıl yapılacağına dair 
detayların soyutlanması idi. Data Abstraction ise, komplex bir datanın nasıl implement edildiğine ait detayın 
bu datayı kullananlardan saklanmasıdır. Data ne kadar abstract ise, o kadar günlük hayatta kullandığımız datalara 
yakın, makine dili olan 1 ve 0’lara uzaktır.&lt;/p&gt;

&lt;p&gt;Ben bu konuya &lt;strong&gt;Structure and Interpretation of Computer Programs&lt;/strong&gt; isimli kitapta verilen karmaşık sayılar örneği 
ile devam etmek istiyorum çünkü ben de bu kitap sayesinde bu konsept ile tanıştım.&lt;/p&gt;

&lt;p&gt;Matematik derslerinden hatırlarsınız karmaşık sayılar diye bir konu vardır, hiç sevememiştim. 
Bir karmaşık sayı kutupsal ve düzlemsel(bu kelime doğru mu emin değilim) olarak iki farklı şekilde gösterilebilir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/polar-form-of-cn.gif&quot; alt=&quot;Polar form of complex number&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Örneğin yukarıdaki resimdeki z karmaşık sayısı aşağıdaki iki farklı biçimde gösterilebilir 
ve ikisi de sayısal olarak aynıdır:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;z = r ∠ θ&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;z = a + bi&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Buradan anlaşılıyor ki &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumber&lt;/code&gt; diye bir sınıf geliştirmek istesek, 
bu sınıf içerisinde veriyi iki farklı şekilde tutabiliriz. Birinci yöntem bir açı ve bir büyüklük içeren yani iki adet 
&lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt; alandan oluşan bir sınıf tasarlamak. İkinci yöntem ise karmaşık sayının reel eksendeki izdüşümünü 
ve sanal eksendeki izdüşümünü tutan yine iki adet &lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt; alandan oluşan bir sınıf tasarlamak.&lt;/p&gt;

&lt;p&gt;Şimdi tek tek iki yöntemin de nasıl tasarlanabileceğine bakalım. 
Öncelikle &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumber&lt;/code&gt; isimli bir &lt;em&gt;interface&lt;/em&gt; tanımlayıp, karmaşık sayılar üzerinde yapılabilecek işlemleri 
tanımlıyoruz. Böylece karmaşık sayıyı kullanacak olan başka yazılım bileşenlerine ihtiyaçları olan methodları 
baştan belirlemiş oluyoruz.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Daha sonra bu interface’den türeyen &lt;em&gt;abstract&lt;/em&gt; bir sınıf tanımlayıp, &lt;code class=&quot;highlighter-rouge&quot;&gt;sum&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;subtract&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;multiply&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;divide&lt;/code&gt; 
methodlarını buraya yazıyorum çünkü bu methodlar datanın içeride nasıl tutulduğundan bağımsız methodlar. 
Yani karmaşık sayılar üzerinde yapılan dört işlemde bile karmaşık sayı datasının içeride nasıl tutulduğu 
ile ilgilenmemiş olduk.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseComplexNumber&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EPSILON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.00001&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromRectangularForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromRectangularForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromPolarForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromPolarForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isZero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isZero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isZero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EPSILON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EPSILON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kendisine ait &lt;code class=&quot;highlighter-rouge&quot;&gt;realPart&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;imaginaryPart&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;angle&lt;/code&gt; ve &lt;code class=&quot;highlighter-rouge&quot;&gt;magnitude&lt;/code&gt; değerlerini dönme 
veya gerekirse hesaplama işlerini ise datayı asıl tutan sınıfın omuzlarına yükledik, 
çünkü bu işlemler içerideki verinin nasıl saklandığına bağlı değişiklik gösteriyorlar.&lt;/p&gt;

&lt;p&gt;Kutupsal gösterimdeki (polar form) şekliyle veriyi tuttuğumuz bir sınıf geliştirecek olursak, 
aşağıdaki gibi bir implementasyon yapabiliriz:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PolarComplexNumber&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseComplexNumber&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PolarComplexNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;magnitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toDegrees&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%.2f x (cos(%.0fu00b0) + i x sin(%.0fu00b0))&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bu sınıf görüldüğü gibi açı ve büyüklük değerlerini tutup, 
realPart ve imaginaryPart değerlerini hesaplayarak hizmet veriyor.&lt;/p&gt;

&lt;p&gt;Düzlemsel gösterimdeki (rectangular form) halde veriyi tutmak istersek eğer, 
aşağıdaki gibi bir sınıf geliştirebiliriz:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RectangularComplexNumber&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseComplexNumber&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RectangularComplexNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;realPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;imaginaryPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRealPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getImaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;atan2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getMagnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%.2f + i x %.2f&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Görüldüğü üzere bu sınıf da realPart ve imaginaryPart değerlerini tutup, 
angle ve magnitude değerlerini hesaplayarak hizmet veriyor.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BaseComplexNumber&lt;/code&gt; sınıfında factory method olarak kullandığımız &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumbers.fromPolarForm&lt;/code&gt; 
ve &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumbers.fromRectangularForm&lt;/code&gt; methodları bu iki gösterimden herhangi birisini seçip 
onu dönecek şekilde geliştirilebilir. &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumbers&lt;/code&gt; aracılığı ile başka yazılım bileşenlerinin 
elde edebileceği tek nesne tipi &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumber&lt;/code&gt; olacaktır. 
Yani datanın nasıl represent edildiğini datayı kullananlardan soyutlamış olduk.&lt;/p&gt;

&lt;p&gt;Ben hazır yazmışken iki sınıfı da kullanayım dedim ve ortaya şöyle bir sınıf çıktı:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromRectangularForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RectangularComplexNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imaginaryPart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComplexNumber&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fromPolarForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PolarComplexNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magnitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Buradan çıkarmamız gereken sonuç tabi ki de bir sistemde aynı veriyi birçok farklı şekilde tasarlamak gerektiği değil. 
Bir yazılımda kompleks bir veri tipi (karmaşık sayı gibi) yaratıyorsanız, 
bu veri tipini kullanan yazılımın diğer bileşenleri için önemli olan iki soruyu cevaplamanız gerekmektedir.&lt;/p&gt;

&lt;p&gt;Bunlardan birincisi, bu veriyi nasıl yaratacakları. 
Bu örneklerde, &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumbers&lt;/code&gt; sınıfı içerisindeki iki factory method ile verinin kolayca yaratılmasını sağladık.&lt;/p&gt;

&lt;p&gt;İkinci önemli soru da bu veri üzerindeki gerekli bilgilere nasıl erişecekleri. 
Açtığımız &lt;code class=&quot;highlighter-rouge&quot;&gt;ComplexNumber&lt;/code&gt; arayüzü ile karmaşık sayı ile ilgili bilgilere 
nasıl erişeceklerini de diğer yazılım bileşenlerine anlatmış olduk.&lt;/p&gt;

&lt;p&gt;Bundan gerisi bizim içeride veriyi nasıl 
ve ne formatta sakladığımız ve bu da bizden başkasını ilgilendirmez. 
Biz istersek içeride byte dizisi olarak tutalım, 
istersek String olarak tutalım, ya da çok daha kötü bir yapı kuralım. 
Dış dünyaya aynı interface’i çalışır durumda verebiliyorsak 
verimizin iç dünyasını istediğimiz biçimde şekillendirebiliriz.&lt;/p&gt;

&lt;h3 id=&quot;finito&quot;&gt;Finito&lt;/h3&gt;

&lt;p&gt;Bu yazıda birçok soyut kavrama değindiğim için tonla hata yapmış olabilirim. 
Böyle durumlarda yorumlarınız ile beni düzeltmekten geri kalmayın.&lt;/p&gt;

&lt;p&gt;Yazıda bir ara ismini zikrettiğim muhteşem kitabın görselini de ekleyeyim. 
Çok uzun uğraşlar sonucu keşfettiğim bir kitap değil zaten, şu tarz listelerden buluyorum böyle kitapları: 
&lt;a href=&quot;https://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read/1713&quot; target=&quot;_blank&quot;&gt;What is the single most influential book every programmer should read?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/saiocp_cover.jpg&quot; alt=&quot;Structure and Interpretation of Computer Programs&quot; width=&quot;221px&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 05 Jun 2017 07:59:00 +0000</pubDate>
        <link>https://serdarkuzucu.com/data-abstraction-nedir-nerede-bulunur/</link>
        <guid isPermaLink="true">https://serdarkuzucu.com/data-abstraction-nedir-nerede-bulunur/</guid>
        
        
        <category>Java</category>
        
        <category>Programlama</category>
        
      </item>
    
  </channel>
</rss>
